//
// Copyright (C) 2016 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v6.32.0--rc2
// source: Resources.proto

package main

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The visibility of the resource outside of its package.
type Visibility_Level int32

const (
	// No visibility was explicitly specified. This is typically treated as private.
	// The distinction is important when two separate R.java files are generated: a public and
	// private one. An unknown visibility, in this case, would cause the resource to be omitted
	// from either R.java.
	Visibility_UNKNOWN Visibility_Level = 0
	// A resource was explicitly marked as private. This means the resource can not be accessed
	// outside of its package unless the @*package:type/entry notation is used (the asterisk being
	// the private accessor). If two R.java files are generated (private + public), the resource
	// will only be emitted to the private R.java file.
	Visibility_PRIVATE Visibility_Level = 1
	// A resource was explicitly marked as public. This means the resource can be accessed
	// from any package, and is emitted into all R.java files, public and private.
	Visibility_PUBLIC Visibility_Level = 2
)

// Enum value maps for Visibility_Level.
var (
	Visibility_Level_name = map[int32]string{
		0: "UNKNOWN",
		1: "PRIVATE",
		2: "PUBLIC",
	}
	Visibility_Level_value = map[string]int32{
		"UNKNOWN": 0,
		"PRIVATE": 1,
		"PUBLIC":  2,
	}
)

func (x Visibility_Level) Enum() *Visibility_Level {
	p := new(Visibility_Level)
	*p = x
	return p
}

func (x Visibility_Level) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Visibility_Level) Descriptor() protoreflect.EnumDescriptor {
	return file_Resources_proto_enumTypes[0].Descriptor()
}

func (Visibility_Level) Type() protoreflect.EnumType {
	return &file_Resources_proto_enumTypes[0]
}

func (x Visibility_Level) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Visibility_Level.Descriptor instead.
func (Visibility_Level) EnumDescriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{9, 0}
}

type OverlayableItem_Policy int32

const (
	OverlayableItem_NONE             OverlayableItem_Policy = 0
	OverlayableItem_PUBLIC           OverlayableItem_Policy = 1
	OverlayableItem_SYSTEM           OverlayableItem_Policy = 2
	OverlayableItem_VENDOR           OverlayableItem_Policy = 3
	OverlayableItem_PRODUCT          OverlayableItem_Policy = 4
	OverlayableItem_SIGNATURE        OverlayableItem_Policy = 5
	OverlayableItem_ODM              OverlayableItem_Policy = 6
	OverlayableItem_OEM              OverlayableItem_Policy = 7
	OverlayableItem_ACTOR            OverlayableItem_Policy = 8
	OverlayableItem_CONFIG_SIGNATURE OverlayableItem_Policy = 9
)

// Enum value maps for OverlayableItem_Policy.
var (
	OverlayableItem_Policy_name = map[int32]string{
		0: "NONE",
		1: "PUBLIC",
		2: "SYSTEM",
		3: "VENDOR",
		4: "PRODUCT",
		5: "SIGNATURE",
		6: "ODM",
		7: "OEM",
		8: "ACTOR",
		9: "CONFIG_SIGNATURE",
	}
	OverlayableItem_Policy_value = map[string]int32{
		"NONE":             0,
		"PUBLIC":           1,
		"SYSTEM":           2,
		"VENDOR":           3,
		"PRODUCT":          4,
		"SIGNATURE":        5,
		"ODM":              6,
		"OEM":              7,
		"ACTOR":            8,
		"CONFIG_SIGNATURE": 9,
	}
)

func (x OverlayableItem_Policy) Enum() *OverlayableItem_Policy {
	p := new(OverlayableItem_Policy)
	*p = x
	return p
}

func (x OverlayableItem_Policy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OverlayableItem_Policy) Descriptor() protoreflect.EnumDescriptor {
	return file_Resources_proto_enumTypes[1].Descriptor()
}

func (OverlayableItem_Policy) Type() protoreflect.EnumType {
	return &file_Resources_proto_enumTypes[1]
}

func (x OverlayableItem_Policy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OverlayableItem_Policy.Descriptor instead.
func (OverlayableItem_Policy) EnumDescriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{12, 0}
}

type Reference_Type int32

const (
	// A plain reference (@package:type/entry).
	Reference_REFERENCE Reference_Type = 0
	// A reference to a theme attribute (?package:type/entry).
	Reference_ATTRIBUTE Reference_Type = 1
)

// Enum value maps for Reference_Type.
var (
	Reference_Type_name = map[int32]string{
		0: "REFERENCE",
		1: "ATTRIBUTE",
	}
	Reference_Type_value = map[string]int32{
		"REFERENCE": 0,
		"ATTRIBUTE": 1,
	}
)

func (x Reference_Type) Enum() *Reference_Type {
	p := new(Reference_Type)
	*p = x
	return p
}

func (x Reference_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Reference_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_Resources_proto_enumTypes[2].Descriptor()
}

func (Reference_Type) Type() protoreflect.EnumType {
	return &file_Resources_proto_enumTypes[2]
}

func (x Reference_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Reference_Type.Descriptor instead.
func (Reference_Type) EnumDescriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{21, 0}
}

type FileReference_Type int32

const (
	FileReference_UNKNOWN    FileReference_Type = 0
	FileReference_PNG        FileReference_Type = 1
	FileReference_BINARY_XML FileReference_Type = 2
	FileReference_PROTO_XML  FileReference_Type = 3
)

// Enum value maps for FileReference_Type.
var (
	FileReference_Type_name = map[int32]string{
		0: "UNKNOWN",
		1: "PNG",
		2: "BINARY_XML",
		3: "PROTO_XML",
	}
	FileReference_Type_value = map[string]int32{
		"UNKNOWN":    0,
		"PNG":        1,
		"BINARY_XML": 2,
		"PROTO_XML":  3,
	}
)

func (x FileReference_Type) Enum() *FileReference_Type {
	p := new(FileReference_Type)
	*p = x
	return p
}

func (x FileReference_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileReference_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_Resources_proto_enumTypes[3].Descriptor()
}

func (FileReference_Type) Type() protoreflect.EnumType {
	return &file_Resources_proto_enumTypes[3]
}

func (x FileReference_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileReference_Type.Descriptor instead.
func (FileReference_Type) EnumDescriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{26, 0}
}

// Bitmask of formats allowed for an attribute.
type Attribute_FormatFlags int32

const (
	Attribute_NONE      Attribute_FormatFlags = 0     // Proto3 requires a default of 0.
	Attribute_ANY       Attribute_FormatFlags = 65535 // Allows any type except ENUM and FLAGS.
	Attribute_REFERENCE Attribute_FormatFlags = 1     // Allows Reference values.
	Attribute_STRING    Attribute_FormatFlags = 2     // Allows String/StyledString values.
	Attribute_INTEGER   Attribute_FormatFlags = 4     // Allows any integer BinaryPrimitive values.
	Attribute_BOOLEAN   Attribute_FormatFlags = 8     // Allows any boolean BinaryPrimitive values.
	Attribute_COLOR     Attribute_FormatFlags = 16    // Allows any color BinaryPrimitive values.
	Attribute_FLOAT     Attribute_FormatFlags = 32    // Allows any float BinaryPrimitive values.
	Attribute_DIMENSION Attribute_FormatFlags = 64    // Allows any dimension BinaryPrimitive values.
	Attribute_FRACTION  Attribute_FormatFlags = 128   // Allows any fraction BinaryPrimitive values.
	Attribute_ENUM      Attribute_FormatFlags = 65536 // Allows enums that are defined in the Attribute's symbols.
	// ENUM and FLAGS cannot BOTH be set.
	Attribute_FLAGS Attribute_FormatFlags = 131072 // Allows flags that are defined in the Attribute's symbols.
)

// Enum value maps for Attribute_FormatFlags.
var (
	Attribute_FormatFlags_name = map[int32]string{
		0:      "NONE",
		65535:  "ANY",
		1:      "REFERENCE",
		2:      "STRING",
		4:      "INTEGER",
		8:      "BOOLEAN",
		16:     "COLOR",
		32:     "FLOAT",
		64:     "DIMENSION",
		128:    "FRACTION",
		65536:  "ENUM",
		131072: "FLAGS",
	}
	Attribute_FormatFlags_value = map[string]int32{
		"NONE":      0,
		"ANY":       65535,
		"REFERENCE": 1,
		"STRING":    2,
		"INTEGER":   4,
		"BOOLEAN":   8,
		"COLOR":     16,
		"FLOAT":     32,
		"DIMENSION": 64,
		"FRACTION":  128,
		"ENUM":      65536,
		"FLAGS":     131072,
	}
)

func (x Attribute_FormatFlags) Enum() *Attribute_FormatFlags {
	p := new(Attribute_FormatFlags)
	*p = x
	return p
}

func (x Attribute_FormatFlags) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Attribute_FormatFlags) Descriptor() protoreflect.EnumDescriptor {
	return file_Resources_proto_enumTypes[4].Descriptor()
}

func (Attribute_FormatFlags) Type() protoreflect.EnumType {
	return &file_Resources_proto_enumTypes[4]
}

func (x Attribute_FormatFlags) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Attribute_FormatFlags.Descriptor instead.
func (Attribute_FormatFlags) EnumDescriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{28, 0}
}

// The arity of the plural.
type Plural_Arity int32

const (
	Plural_ZERO  Plural_Arity = 0
	Plural_ONE   Plural_Arity = 1
	Plural_TWO   Plural_Arity = 2
	Plural_FEW   Plural_Arity = 3
	Plural_MANY  Plural_Arity = 4
	Plural_OTHER Plural_Arity = 5
)

// Enum value maps for Plural_Arity.
var (
	Plural_Arity_name = map[int32]string{
		0: "ZERO",
		1: "ONE",
		2: "TWO",
		3: "FEW",
		4: "MANY",
		5: "OTHER",
	}
	Plural_Arity_value = map[string]int32{
		"ZERO":  0,
		"ONE":   1,
		"TWO":   2,
		"FEW":   3,
		"MANY":  4,
		"OTHER": 5,
	}
)

func (x Plural_Arity) Enum() *Plural_Arity {
	p := new(Plural_Arity)
	*p = x
	return p
}

func (x Plural_Arity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Plural_Arity) Descriptor() protoreflect.EnumDescriptor {
	return file_Resources_proto_enumTypes[5].Descriptor()
}

func (Plural_Arity) Type() protoreflect.EnumType {
	return &file_Resources_proto_enumTypes[5]
}

func (x Plural_Arity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Plural_Arity.Descriptor instead.
func (Plural_Arity) EnumDescriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{32, 0}
}

// A string pool that wraps the binary form of the C++ class android::ResStringPool.
type StringPool struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringPool) Reset() {
	*x = StringPool{}
	mi := &file_Resources_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringPool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringPool) ProtoMessage() {}

func (x *StringPool) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringPool.ProtoReflect.Descriptor instead.
func (*StringPool) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{0}
}

func (x *StringPool) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// The position of a declared entity within a file.
type SourcePosition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LineNumber    uint32                 `protobuf:"varint,1,opt,name=line_number,json=lineNumber,proto3" json:"line_number,omitempty"`
	ColumnNumber  uint32                 `protobuf:"varint,2,opt,name=column_number,json=columnNumber,proto3" json:"column_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SourcePosition) Reset() {
	*x = SourcePosition{}
	mi := &file_Resources_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SourcePosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourcePosition) ProtoMessage() {}

func (x *SourcePosition) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourcePosition.ProtoReflect.Descriptor instead.
func (*SourcePosition) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{1}
}

func (x *SourcePosition) GetLineNumber() uint32 {
	if x != nil {
		return x.LineNumber
	}
	return 0
}

func (x *SourcePosition) GetColumnNumber() uint32 {
	if x != nil {
		return x.ColumnNumber
	}
	return 0
}

// Developer friendly source file information for an entity in the resource table.
type Source struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The index of the string path within the source string pool of a ResourceTable.
	PathIdx       uint32          `protobuf:"varint,1,opt,name=path_idx,json=pathIdx,proto3" json:"path_idx,omitempty"`
	Position      *SourcePosition `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Source) Reset() {
	*x = Source{}
	mi := &file_Resources_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Source) ProtoMessage() {}

func (x *Source) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Source.ProtoReflect.Descriptor instead.
func (*Source) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{2}
}

func (x *Source) GetPathIdx() uint32 {
	if x != nil {
		return x.PathIdx
	}
	return 0
}

func (x *Source) GetPosition() *SourcePosition {
	if x != nil {
		return x.Position
	}
	return nil
}

// The name and version fingerprint of a build tool.
type ToolFingerprint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tool          string                 `protobuf:"bytes,1,opt,name=tool,proto3" json:"tool,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToolFingerprint) Reset() {
	*x = ToolFingerprint{}
	mi := &file_Resources_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToolFingerprint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToolFingerprint) ProtoMessage() {}

func (x *ToolFingerprint) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToolFingerprint.ProtoReflect.Descriptor instead.
func (*ToolFingerprint) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{3}
}

func (x *ToolFingerprint) GetTool() string {
	if x != nil {
		return x.Tool
	}
	return ""
}

func (x *ToolFingerprint) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// Top level message representing a resource table.
type ResourceTable struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The string pool containing source paths referenced throughout the resource table. This does
	// not end up in the final binary ARSC file.
	SourcePool *StringPool `protobuf:"bytes,1,opt,name=source_pool,json=sourcePool,proto3" json:"source_pool,omitempty"`
	// Resource definitions corresponding to an Android package.
	Package []*Package `protobuf:"bytes,2,rep,name=package,proto3" json:"package,omitempty"`
	// The <overlayable> declarations within the resource table.
	Overlayable []*Overlayable `protobuf:"bytes,3,rep,name=overlayable,proto3" json:"overlayable,omitempty"`
	// The version fingerprints of the tools that built the resource table.
	ToolFingerprint []*ToolFingerprint `protobuf:"bytes,4,rep,name=tool_fingerprint,json=toolFingerprint,proto3" json:"tool_fingerprint,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ResourceTable) Reset() {
	*x = ResourceTable{}
	mi := &file_Resources_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceTable) ProtoMessage() {}

func (x *ResourceTable) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceTable.ProtoReflect.Descriptor instead.
func (*ResourceTable) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{4}
}

func (x *ResourceTable) GetSourcePool() *StringPool {
	if x != nil {
		return x.SourcePool
	}
	return nil
}

func (x *ResourceTable) GetPackage() []*Package {
	if x != nil {
		return x.Package
	}
	return nil
}

func (x *ResourceTable) GetOverlayable() []*Overlayable {
	if x != nil {
		return x.Overlayable
	}
	return nil
}

func (x *ResourceTable) GetToolFingerprint() []*ToolFingerprint {
	if x != nil {
		return x.ToolFingerprint
	}
	return nil
}

// A package ID in the range [0x00, 0xff].
type PackageId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PackageId) Reset() {
	*x = PackageId{}
	mi := &file_Resources_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PackageId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageId) ProtoMessage() {}

func (x *PackageId) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageId.ProtoReflect.Descriptor instead.
func (*PackageId) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{5}
}

func (x *PackageId) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Defines resources for an Android package.
type Package struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The package ID of this package, in the range [0x00, 0xff].
	// - ID 0x00 is reserved for shared libraries, or when the ID is assigned at run-time.
	// - ID 0x01 is reserved for the 'android' package (framework).
	// - ID range [0x02, 0x7f) is reserved for auto-assignment to shared libraries at run-time.
	// - ID 0x7f is reserved for the application package.
	// - IDs > 0x7f are reserved for the application as well and are treated as feature splits.
	// This may not be set if no ID was assigned.
	PackageId *PackageId `protobuf:"bytes,1,opt,name=package_id,json=packageId,proto3" json:"package_id,omitempty"`
	// The Java compatible Android package name of the app.
	PackageName string `protobuf:"bytes,2,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	// The series of types defined by the package.
	Type          []*Type `protobuf:"bytes,3,rep,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Package) Reset() {
	*x = Package{}
	mi := &file_Resources_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Package) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Package) ProtoMessage() {}

func (x *Package) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Package.ProtoReflect.Descriptor instead.
func (*Package) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{6}
}

func (x *Package) GetPackageId() *PackageId {
	if x != nil {
		return x.PackageId
	}
	return nil
}

func (x *Package) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *Package) GetType() []*Type {
	if x != nil {
		return x.Type
	}
	return nil
}

// A type ID in the range [0x01, 0xff].
type TypeId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TypeId) Reset() {
	*x = TypeId{}
	mi := &file_Resources_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TypeId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeId) ProtoMessage() {}

func (x *TypeId) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeId.ProtoReflect.Descriptor instead.
func (*TypeId) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{7}
}

func (x *TypeId) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// A set of resources grouped under a common type. Such types include string, layout, xml, dimen,
// attr, etc. This maps to the second part of a resource identifier in Java (R.type.entry).
type Type struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the type. This may not be set if no ID was assigned.
	TypeId *TypeId `protobuf:"bytes,1,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	// The name of the type. This corresponds to the 'type' part of a full resource name of the form
	// package:type/entry. The set of legal type names is listed in Resource.cpp.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The entries defined for this type.
	Entry         []*Entry `protobuf:"bytes,3,rep,name=entry,proto3" json:"entry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Type) Reset() {
	*x = Type{}
	mi := &file_Resources_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Type) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type) ProtoMessage() {}

func (x *Type) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type.ProtoReflect.Descriptor instead.
func (*Type) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{8}
}

func (x *Type) GetTypeId() *TypeId {
	if x != nil {
		return x.TypeId
	}
	return nil
}

func (x *Type) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Type) GetEntry() []*Entry {
	if x != nil {
		return x.Entry
	}
	return nil
}

// The Visibility of a symbol/entry (public, private, undefined).
type Visibility struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Level Visibility_Level       `protobuf:"varint,1,opt,name=level,proto3,enum=aapt.pb.Visibility_Level" json:"level,omitempty"`
	// The path at which this entry's visibility was defined (eg. public.xml).
	Source *Source `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	// The comment associated with the <public> tag.
	Comment string `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	// Indicates that the resource id may change across builds and that the public R.java identifier
	// for this resource should not be final. This is set to `true` for resources in `staging-group`
	// tags.
	StagedApi     bool `protobuf:"varint,4,opt,name=staged_api,json=stagedApi,proto3" json:"staged_api,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Visibility) Reset() {
	*x = Visibility{}
	mi := &file_Resources_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Visibility) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Visibility) ProtoMessage() {}

func (x *Visibility) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Visibility.ProtoReflect.Descriptor instead.
func (*Visibility) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{9}
}

func (x *Visibility) GetLevel() Visibility_Level {
	if x != nil {
		return x.Level
	}
	return Visibility_UNKNOWN
}

func (x *Visibility) GetSource() *Source {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *Visibility) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Visibility) GetStagedApi() bool {
	if x != nil {
		return x.StagedApi
	}
	return false
}

// Whether a resource comes from a compile-time overlay and is explicitly allowed to not overlay an
// existing resource.
type AllowNew struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Where this was defined in source.
	Source *Source `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	// Any comment associated with the declaration.
	Comment       string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AllowNew) Reset() {
	*x = AllowNew{}
	mi := &file_Resources_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllowNew) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllowNew) ProtoMessage() {}

func (x *AllowNew) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllowNew.ProtoReflect.Descriptor instead.
func (*AllowNew) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{10}
}

func (x *AllowNew) GetSource() *Source {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *AllowNew) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

// Represents a set of overlayable resources.
type Overlayable struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the <overlayable>.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The location of the <overlayable> declaration in the source.
	Source *Source `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	// The component responsible for enabling and disabling overlays targeting this <overlayable>.
	Actor         string `protobuf:"bytes,3,opt,name=actor,proto3" json:"actor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Overlayable) Reset() {
	*x = Overlayable{}
	mi := &file_Resources_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Overlayable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Overlayable) ProtoMessage() {}

func (x *Overlayable) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Overlayable.ProtoReflect.Descriptor instead.
func (*Overlayable) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{11}
}

func (x *Overlayable) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Overlayable) GetSource() *Source {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *Overlayable) GetActor() string {
	if x != nil {
		return x.Actor
	}
	return ""
}

// Represents an overlayable <item> declaration within an <overlayable> tag.
type OverlayableItem struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The location of the <item> declaration in source.
	Source *Source `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	// Any comment associated with the declaration.
	Comment string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	// The policy defined by the enclosing <policy> tag of this <item>.
	Policy []OverlayableItem_Policy `protobuf:"varint,3,rep,packed,name=policy,proto3,enum=aapt.pb.OverlayableItem_Policy" json:"policy,omitempty"`
	// The index into overlayable list that points to the <overlayable> tag that contains
	// this <item>.
	OverlayableIdx uint32 `protobuf:"varint,4,opt,name=overlayable_idx,json=overlayableIdx,proto3" json:"overlayable_idx,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *OverlayableItem) Reset() {
	*x = OverlayableItem{}
	mi := &file_Resources_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OverlayableItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverlayableItem) ProtoMessage() {}

func (x *OverlayableItem) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverlayableItem.ProtoReflect.Descriptor instead.
func (*OverlayableItem) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{12}
}

func (x *OverlayableItem) GetSource() *Source {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *OverlayableItem) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *OverlayableItem) GetPolicy() []OverlayableItem_Policy {
	if x != nil {
		return x.Policy
	}
	return nil
}

func (x *OverlayableItem) GetOverlayableIdx() uint32 {
	if x != nil {
		return x.OverlayableIdx
	}
	return 0
}

// The staged resource ID definition of a finalized resource.
type StagedId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Source        *Source                `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	StagedId      uint32                 `protobuf:"varint,2,opt,name=staged_id,json=stagedId,proto3" json:"staged_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StagedId) Reset() {
	*x = StagedId{}
	mi := &file_Resources_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StagedId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StagedId) ProtoMessage() {}

func (x *StagedId) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StagedId.ProtoReflect.Descriptor instead.
func (*StagedId) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{13}
}

func (x *StagedId) GetSource() *Source {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *StagedId) GetStagedId() uint32 {
	if x != nil {
		return x.StagedId
	}
	return 0
}

// An entry ID in the range [0x0000, 0xffff].
type EntryId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EntryId) Reset() {
	*x = EntryId{}
	mi := &file_Resources_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntryId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntryId) ProtoMessage() {}

func (x *EntryId) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntryId.ProtoReflect.Descriptor instead.
func (*EntryId) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{14}
}

func (x *EntryId) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// An entry declaration. An entry has a full resource ID that is the combination of package ID,
// type ID, and its own entry ID. An entry on its own has no value, but values are defined for
// various configurations/variants.
type Entry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of this entry. Together with the package ID and type ID, this forms a full resource ID
	// of the form 0xPPTTEEEE, where PP is the package ID, TT is the type ID, and EEEE is the entry
	// ID.
	// This may not be set if no ID was assigned.
	EntryId *EntryId `protobuf:"bytes,1,opt,name=entry_id,json=entryId,proto3" json:"entry_id,omitempty"`
	// The name of this entry. This corresponds to the 'entry' part of a full resource name of the
	// form package:type/entry.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The visibility of this entry (public, private, undefined).
	Visibility *Visibility `protobuf:"bytes,3,opt,name=visibility,proto3" json:"visibility,omitempty"`
	// Whether this resource, when originating from a compile-time overlay, is allowed to NOT overlay
	// any existing resources.
	AllowNew *AllowNew `protobuf:"bytes,4,opt,name=allow_new,json=allowNew,proto3" json:"allow_new,omitempty"`
	// Whether this resource can be overlaid by a runtime resource overlay (RRO).
	OverlayableItem *OverlayableItem `protobuf:"bytes,5,opt,name=overlayable_item,json=overlayableItem,proto3" json:"overlayable_item,omitempty"`
	// The set of values defined for this entry, each corresponding to a different
	// configuration/variant.
	ConfigValue []*ConfigValue `protobuf:"bytes,6,rep,name=config_value,json=configValue,proto3" json:"config_value,omitempty"`
	// The staged resource ID of this finalized resource.
	StagedId      *StagedId `protobuf:"bytes,7,opt,name=staged_id,json=stagedId,proto3" json:"staged_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Entry) Reset() {
	*x = Entry{}
	mi := &file_Resources_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entry) ProtoMessage() {}

func (x *Entry) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entry.ProtoReflect.Descriptor instead.
func (*Entry) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{15}
}

func (x *Entry) GetEntryId() *EntryId {
	if x != nil {
		return x.EntryId
	}
	return nil
}

func (x *Entry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Entry) GetVisibility() *Visibility {
	if x != nil {
		return x.Visibility
	}
	return nil
}

func (x *Entry) GetAllowNew() *AllowNew {
	if x != nil {
		return x.AllowNew
	}
	return nil
}

func (x *Entry) GetOverlayableItem() *OverlayableItem {
	if x != nil {
		return x.OverlayableItem
	}
	return nil
}

func (x *Entry) GetConfigValue() []*ConfigValue {
	if x != nil {
		return x.ConfigValue
	}
	return nil
}

func (x *Entry) GetStagedId() *StagedId {
	if x != nil {
		return x.StagedId
	}
	return nil
}

// A Configuration/Value pair.
type ConfigValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Config        *Configuration         `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	Value         *Value                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigValue) Reset() {
	*x = ConfigValue{}
	mi := &file_Resources_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigValue) ProtoMessage() {}

func (x *ConfigValue) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigValue.ProtoReflect.Descriptor instead.
func (*ConfigValue) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{16}
}

func (x *ConfigValue) GetConfig() *Configuration {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ConfigValue) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

// The generic meta-data for every value in a resource table.
type Value struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Where the value was defined.
	Source *Source `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	// Any comment associated with the value.
	Comment string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	// Whether the value can be overridden.
	Weak bool `protobuf:"varint,3,opt,name=weak,proto3" json:"weak,omitempty"`
	// The value is either an Item or a CompoundValue.
	//
	// Types that are valid to be assigned to Value:
	//
	//	*Value_Item
	//	*Value_CompoundValue
	Value         isValue_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Value) Reset() {
	*x = Value{}
	mi := &file_Resources_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{17}
}

func (x *Value) GetSource() *Source {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *Value) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Value) GetWeak() bool {
	if x != nil {
		return x.Weak
	}
	return false
}

func (x *Value) GetValue() isValue_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Value) GetItem() *Item {
	if x != nil {
		if x, ok := x.Value.(*Value_Item); ok {
			return x.Item
		}
	}
	return nil
}

func (x *Value) GetCompoundValue() *CompoundValue {
	if x != nil {
		if x, ok := x.Value.(*Value_CompoundValue); ok {
			return x.CompoundValue
		}
	}
	return nil
}

type isValue_Value interface {
	isValue_Value()
}

type Value_Item struct {
	Item *Item `protobuf:"bytes,4,opt,name=item,proto3,oneof"`
}

type Value_CompoundValue struct {
	CompoundValue *CompoundValue `protobuf:"bytes,5,opt,name=compound_value,json=compoundValue,proto3,oneof"`
}

func (*Value_Item) isValue_Value() {}

func (*Value_CompoundValue) isValue_Value() {}

// An Item is an abstract type. It represents a value that can appear inline in many places, such
// as XML attribute values or on the right hand side of style attribute definitions. The concrete
// type is one of the types below. Only one can be set.
type Item struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*Item_Ref
	//	*Item_Str
	//	*Item_RawStr
	//	*Item_StyledStr
	//	*Item_File
	//	*Item_Id
	//	*Item_Prim
	Value         isItem_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Item) Reset() {
	*x = Item{}
	mi := &file_Resources_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{18}
}

func (x *Item) GetValue() isItem_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Item) GetRef() *Reference {
	if x != nil {
		if x, ok := x.Value.(*Item_Ref); ok {
			return x.Ref
		}
	}
	return nil
}

func (x *Item) GetStr() *String {
	if x != nil {
		if x, ok := x.Value.(*Item_Str); ok {
			return x.Str
		}
	}
	return nil
}

func (x *Item) GetRawStr() *RawString {
	if x != nil {
		if x, ok := x.Value.(*Item_RawStr); ok {
			return x.RawStr
		}
	}
	return nil
}

func (x *Item) GetStyledStr() *StyledString {
	if x != nil {
		if x, ok := x.Value.(*Item_StyledStr); ok {
			return x.StyledStr
		}
	}
	return nil
}

func (x *Item) GetFile() *FileReference {
	if x != nil {
		if x, ok := x.Value.(*Item_File); ok {
			return x.File
		}
	}
	return nil
}

func (x *Item) GetId() *Id {
	if x != nil {
		if x, ok := x.Value.(*Item_Id); ok {
			return x.Id
		}
	}
	return nil
}

func (x *Item) GetPrim() *Primitive {
	if x != nil {
		if x, ok := x.Value.(*Item_Prim); ok {
			return x.Prim
		}
	}
	return nil
}

type isItem_Value interface {
	isItem_Value()
}

type Item_Ref struct {
	Ref *Reference `protobuf:"bytes,1,opt,name=ref,proto3,oneof"`
}

type Item_Str struct {
	Str *String `protobuf:"bytes,2,opt,name=str,proto3,oneof"`
}

type Item_RawStr struct {
	RawStr *RawString `protobuf:"bytes,3,opt,name=raw_str,json=rawStr,proto3,oneof"`
}

type Item_StyledStr struct {
	StyledStr *StyledString `protobuf:"bytes,4,opt,name=styled_str,json=styledStr,proto3,oneof"`
}

type Item_File struct {
	File *FileReference `protobuf:"bytes,5,opt,name=file,proto3,oneof"`
}

type Item_Id struct {
	Id *Id `protobuf:"bytes,6,opt,name=id,proto3,oneof"`
}

type Item_Prim struct {
	Prim *Primitive `protobuf:"bytes,7,opt,name=prim,proto3,oneof"`
}

func (*Item_Ref) isItem_Value() {}

func (*Item_Str) isItem_Value() {}

func (*Item_RawStr) isItem_Value() {}

func (*Item_StyledStr) isItem_Value() {}

func (*Item_File) isItem_Value() {}

func (*Item_Id) isItem_Value() {}

func (*Item_Prim) isItem_Value() {}

// A CompoundValue is an abstract type. It represents a value that is a made of other values.
// These can only usually appear as top-level resources. The concrete type is one of the types
// below. Only one can be set.
type CompoundValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*CompoundValue_Attr
	//	*CompoundValue_Style
	//	*CompoundValue_Styleable
	//	*CompoundValue_Array
	//	*CompoundValue_Plural
	//	*CompoundValue_Macro
	Value         isCompoundValue_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompoundValue) Reset() {
	*x = CompoundValue{}
	mi := &file_Resources_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompoundValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompoundValue) ProtoMessage() {}

func (x *CompoundValue) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompoundValue.ProtoReflect.Descriptor instead.
func (*CompoundValue) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{19}
}

func (x *CompoundValue) GetValue() isCompoundValue_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *CompoundValue) GetAttr() *Attribute {
	if x != nil {
		if x, ok := x.Value.(*CompoundValue_Attr); ok {
			return x.Attr
		}
	}
	return nil
}

func (x *CompoundValue) GetStyle() *Style {
	if x != nil {
		if x, ok := x.Value.(*CompoundValue_Style); ok {
			return x.Style
		}
	}
	return nil
}

func (x *CompoundValue) GetStyleable() *Styleable {
	if x != nil {
		if x, ok := x.Value.(*CompoundValue_Styleable); ok {
			return x.Styleable
		}
	}
	return nil
}

func (x *CompoundValue) GetArray() *Array {
	if x != nil {
		if x, ok := x.Value.(*CompoundValue_Array); ok {
			return x.Array
		}
	}
	return nil
}

func (x *CompoundValue) GetPlural() *Plural {
	if x != nil {
		if x, ok := x.Value.(*CompoundValue_Plural); ok {
			return x.Plural
		}
	}
	return nil
}

func (x *CompoundValue) GetMacro() *MacroBody {
	if x != nil {
		if x, ok := x.Value.(*CompoundValue_Macro); ok {
			return x.Macro
		}
	}
	return nil
}

type isCompoundValue_Value interface {
	isCompoundValue_Value()
}

type CompoundValue_Attr struct {
	Attr *Attribute `protobuf:"bytes,1,opt,name=attr,proto3,oneof"`
}

type CompoundValue_Style struct {
	Style *Style `protobuf:"bytes,2,opt,name=style,proto3,oneof"`
}

type CompoundValue_Styleable struct {
	Styleable *Styleable `protobuf:"bytes,3,opt,name=styleable,proto3,oneof"`
}

type CompoundValue_Array struct {
	Array *Array `protobuf:"bytes,4,opt,name=array,proto3,oneof"`
}

type CompoundValue_Plural struct {
	Plural *Plural `protobuf:"bytes,5,opt,name=plural,proto3,oneof"`
}

type CompoundValue_Macro struct {
	Macro *MacroBody `protobuf:"bytes,6,opt,name=macro,proto3,oneof"`
}

func (*CompoundValue_Attr) isCompoundValue_Value() {}

func (*CompoundValue_Style) isCompoundValue_Value() {}

func (*CompoundValue_Styleable) isCompoundValue_Value() {}

func (*CompoundValue_Array) isCompoundValue_Value() {}

func (*CompoundValue_Plural) isCompoundValue_Value() {}

func (*CompoundValue_Macro) isCompoundValue_Value() {}

// Message holding a boolean, so it can be optionally encoded.
type Boolean struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         bool                   `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Boolean) Reset() {
	*x = Boolean{}
	mi := &file_Resources_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Boolean) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Boolean) ProtoMessage() {}

func (x *Boolean) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Boolean.ProtoReflect.Descriptor instead.
func (*Boolean) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{20}
}

func (x *Boolean) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

// A value that is a reference to another resource. This reference can be by name or resource ID.
type Reference struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Type  Reference_Type         `protobuf:"varint,1,opt,name=type,proto3,enum=aapt.pb.Reference_Type" json:"type,omitempty"`
	// The resource ID (0xPPTTEEEE) of the resource being referred. This is optional.
	Id uint32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// The name of the resource being referred. This is optional if the resource ID is set.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Whether this reference is referencing a private resource (@*package:type/entry).
	Private bool `protobuf:"varint,4,opt,name=private,proto3" json:"private,omitempty"`
	// Whether this reference is dynamic.
	IsDynamic *Boolean `protobuf:"bytes,5,opt,name=is_dynamic,json=isDynamic,proto3" json:"is_dynamic,omitempty"`
	// The type flags used when compiling the reference. Used for substituting the contents of macros.
	TypeFlags uint32 `protobuf:"varint,6,opt,name=type_flags,json=typeFlags,proto3" json:"type_flags,omitempty"`
	// Whether raw string values would have been accepted in place of this reference definition. Used
	// for substituting the contents of macros.
	AllowRaw      bool `protobuf:"varint,7,opt,name=allow_raw,json=allowRaw,proto3" json:"allow_raw,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Reference) Reset() {
	*x = Reference{}
	mi := &file_Resources_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Reference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reference) ProtoMessage() {}

func (x *Reference) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reference.ProtoReflect.Descriptor instead.
func (*Reference) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{21}
}

func (x *Reference) GetType() Reference_Type {
	if x != nil {
		return x.Type
	}
	return Reference_REFERENCE
}

func (x *Reference) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Reference) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Reference) GetPrivate() bool {
	if x != nil {
		return x.Private
	}
	return false
}

func (x *Reference) GetIsDynamic() *Boolean {
	if x != nil {
		return x.IsDynamic
	}
	return nil
}

func (x *Reference) GetTypeFlags() uint32 {
	if x != nil {
		return x.TypeFlags
	}
	return 0
}

func (x *Reference) GetAllowRaw() bool {
	if x != nil {
		return x.AllowRaw
	}
	return false
}

// A value that represents an ID. This is just a placeholder, as ID values are used to occupy a
// resource ID (0xPPTTEEEE) as a unique identifier. Their value is unimportant.
type Id struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Id) Reset() {
	*x = Id{}
	mi := &file_Resources_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Id) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Id) ProtoMessage() {}

func (x *Id) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Id.ProtoReflect.Descriptor instead.
func (*Id) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{22}
}

// A value that is a string.
type String struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *String) Reset() {
	*x = String{}
	mi := &file_Resources_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *String) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*String) ProtoMessage() {}

func (x *String) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use String.ProtoReflect.Descriptor instead.
func (*String) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{23}
}

func (x *String) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// A value that is a raw string, which is unescaped/uninterpreted. This is typically used to
// represent the value of a style attribute before the attribute is compiled and the set of
// allowed values is known.
type RawString struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RawString) Reset() {
	*x = RawString{}
	mi := &file_Resources_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RawString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawString) ProtoMessage() {}

func (x *RawString) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawString.ProtoReflect.Descriptor instead.
func (*RawString) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{24}
}

func (x *RawString) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// A string with styling information, like html tags that specify boldness, italics, etc.
type StyledString struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The raw text of the string.
	Value         string               `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Span          []*StyledString_Span `protobuf:"bytes,2,rep,name=span,proto3" json:"span,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StyledString) Reset() {
	*x = StyledString{}
	mi := &file_Resources_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StyledString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StyledString) ProtoMessage() {}

func (x *StyledString) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StyledString.ProtoReflect.Descriptor instead.
func (*StyledString) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{25}
}

func (x *StyledString) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *StyledString) GetSpan() []*StyledString_Span {
	if x != nil {
		return x.Span
	}
	return nil
}

// A value that is a reference to an external entity, like an XML file or a PNG.
type FileReference struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Path to a file within the APK (typically res/type-config/entry.ext).
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// The type of file this path points to. For UAM bundle, this cannot be
	// BINARY_XML.
	Type          FileReference_Type `protobuf:"varint,2,opt,name=type,proto3,enum=aapt.pb.FileReference_Type" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileReference) Reset() {
	*x = FileReference{}
	mi := &file_Resources_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileReference) ProtoMessage() {}

func (x *FileReference) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileReference.ProtoReflect.Descriptor instead.
func (*FileReference) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{26}
}

func (x *FileReference) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileReference) GetType() FileReference_Type {
	if x != nil {
		return x.Type
	}
	return FileReference_UNKNOWN
}

// A value that represents a primitive data type (float, int, boolean, etc.).
// Refer to Res_value in ResourceTypes.h for info on types and formatting
type Primitive struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to OneofValue:
	//
	//	*Primitive_NullValue
	//	*Primitive_EmptyValue
	//	*Primitive_FloatValue
	//	*Primitive_DimensionValue
	//	*Primitive_FractionValue
	//	*Primitive_IntDecimalValue
	//	*Primitive_IntHexadecimalValue
	//	*Primitive_BooleanValue
	//	*Primitive_ColorArgb8Value
	//	*Primitive_ColorRgb8Value
	//	*Primitive_ColorArgb4Value
	//	*Primitive_ColorRgb4Value
	//	*Primitive_DimensionValueDeprecated
	//	*Primitive_FractionValueDeprecated
	OneofValue    isPrimitive_OneofValue `protobuf_oneof:"oneof_value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Primitive) Reset() {
	*x = Primitive{}
	mi := &file_Resources_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Primitive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Primitive) ProtoMessage() {}

func (x *Primitive) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Primitive.ProtoReflect.Descriptor instead.
func (*Primitive) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{27}
}

func (x *Primitive) GetOneofValue() isPrimitive_OneofValue {
	if x != nil {
		return x.OneofValue
	}
	return nil
}

func (x *Primitive) GetNullValue() *Primitive_NullType {
	if x != nil {
		if x, ok := x.OneofValue.(*Primitive_NullValue); ok {
			return x.NullValue
		}
	}
	return nil
}

func (x *Primitive) GetEmptyValue() *Primitive_EmptyType {
	if x != nil {
		if x, ok := x.OneofValue.(*Primitive_EmptyValue); ok {
			return x.EmptyValue
		}
	}
	return nil
}

func (x *Primitive) GetFloatValue() float32 {
	if x != nil {
		if x, ok := x.OneofValue.(*Primitive_FloatValue); ok {
			return x.FloatValue
		}
	}
	return 0
}

func (x *Primitive) GetDimensionValue() uint32 {
	if x != nil {
		if x, ok := x.OneofValue.(*Primitive_DimensionValue); ok {
			return x.DimensionValue
		}
	}
	return 0
}

func (x *Primitive) GetFractionValue() uint32 {
	if x != nil {
		if x, ok := x.OneofValue.(*Primitive_FractionValue); ok {
			return x.FractionValue
		}
	}
	return 0
}

func (x *Primitive) GetIntDecimalValue() int32 {
	if x != nil {
		if x, ok := x.OneofValue.(*Primitive_IntDecimalValue); ok {
			return x.IntDecimalValue
		}
	}
	return 0
}

func (x *Primitive) GetIntHexadecimalValue() uint32 {
	if x != nil {
		if x, ok := x.OneofValue.(*Primitive_IntHexadecimalValue); ok {
			return x.IntHexadecimalValue
		}
	}
	return 0
}

func (x *Primitive) GetBooleanValue() bool {
	if x != nil {
		if x, ok := x.OneofValue.(*Primitive_BooleanValue); ok {
			return x.BooleanValue
		}
	}
	return false
}

func (x *Primitive) GetColorArgb8Value() uint32 {
	if x != nil {
		if x, ok := x.OneofValue.(*Primitive_ColorArgb8Value); ok {
			return x.ColorArgb8Value
		}
	}
	return 0
}

func (x *Primitive) GetColorRgb8Value() uint32 {
	if x != nil {
		if x, ok := x.OneofValue.(*Primitive_ColorRgb8Value); ok {
			return x.ColorRgb8Value
		}
	}
	return 0
}

func (x *Primitive) GetColorArgb4Value() uint32 {
	if x != nil {
		if x, ok := x.OneofValue.(*Primitive_ColorArgb4Value); ok {
			return x.ColorArgb4Value
		}
	}
	return 0
}

func (x *Primitive) GetColorRgb4Value() uint32 {
	if x != nil {
		if x, ok := x.OneofValue.(*Primitive_ColorRgb4Value); ok {
			return x.ColorRgb4Value
		}
	}
	return 0
}

// Deprecated: Marked as deprecated in Resources.proto.
func (x *Primitive) GetDimensionValueDeprecated() float32 {
	if x != nil {
		if x, ok := x.OneofValue.(*Primitive_DimensionValueDeprecated); ok {
			return x.DimensionValueDeprecated
		}
	}
	return 0
}

// Deprecated: Marked as deprecated in Resources.proto.
func (x *Primitive) GetFractionValueDeprecated() float32 {
	if x != nil {
		if x, ok := x.OneofValue.(*Primitive_FractionValueDeprecated); ok {
			return x.FractionValueDeprecated
		}
	}
	return 0
}

type isPrimitive_OneofValue interface {
	isPrimitive_OneofValue()
}

type Primitive_NullValue struct {
	NullValue *Primitive_NullType `protobuf:"bytes,1,opt,name=null_value,json=nullValue,proto3,oneof"`
}

type Primitive_EmptyValue struct {
	EmptyValue *Primitive_EmptyType `protobuf:"bytes,2,opt,name=empty_value,json=emptyValue,proto3,oneof"`
}

type Primitive_FloatValue struct {
	FloatValue float32 `protobuf:"fixed32,3,opt,name=float_value,json=floatValue,proto3,oneof"`
}

type Primitive_DimensionValue struct {
	DimensionValue uint32 `protobuf:"varint,13,opt,name=dimension_value,json=dimensionValue,proto3,oneof"`
}

type Primitive_FractionValue struct {
	FractionValue uint32 `protobuf:"varint,14,opt,name=fraction_value,json=fractionValue,proto3,oneof"`
}

type Primitive_IntDecimalValue struct {
	IntDecimalValue int32 `protobuf:"varint,6,opt,name=int_decimal_value,json=intDecimalValue,proto3,oneof"`
}

type Primitive_IntHexadecimalValue struct {
	IntHexadecimalValue uint32 `protobuf:"varint,7,opt,name=int_hexadecimal_value,json=intHexadecimalValue,proto3,oneof"`
}

type Primitive_BooleanValue struct {
	BooleanValue bool `protobuf:"varint,8,opt,name=boolean_value,json=booleanValue,proto3,oneof"`
}

type Primitive_ColorArgb8Value struct {
	ColorArgb8Value uint32 `protobuf:"varint,9,opt,name=color_argb8_value,json=colorArgb8Value,proto3,oneof"`
}

type Primitive_ColorRgb8Value struct {
	ColorRgb8Value uint32 `protobuf:"varint,10,opt,name=color_rgb8_value,json=colorRgb8Value,proto3,oneof"`
}

type Primitive_ColorArgb4Value struct {
	ColorArgb4Value uint32 `protobuf:"varint,11,opt,name=color_argb4_value,json=colorArgb4Value,proto3,oneof"`
}

type Primitive_ColorRgb4Value struct {
	ColorRgb4Value uint32 `protobuf:"varint,12,opt,name=color_rgb4_value,json=colorRgb4Value,proto3,oneof"`
}

type Primitive_DimensionValueDeprecated struct {
	// Deprecated: Marked as deprecated in Resources.proto.
	DimensionValueDeprecated float32 `protobuf:"fixed32,4,opt,name=dimension_value_deprecated,json=dimensionValueDeprecated,proto3,oneof"`
}

type Primitive_FractionValueDeprecated struct {
	// Deprecated: Marked as deprecated in Resources.proto.
	FractionValueDeprecated float32 `protobuf:"fixed32,5,opt,name=fraction_value_deprecated,json=fractionValueDeprecated,proto3,oneof"`
}

func (*Primitive_NullValue) isPrimitive_OneofValue() {}

func (*Primitive_EmptyValue) isPrimitive_OneofValue() {}

func (*Primitive_FloatValue) isPrimitive_OneofValue() {}

func (*Primitive_DimensionValue) isPrimitive_OneofValue() {}

func (*Primitive_FractionValue) isPrimitive_OneofValue() {}

func (*Primitive_IntDecimalValue) isPrimitive_OneofValue() {}

func (*Primitive_IntHexadecimalValue) isPrimitive_OneofValue() {}

func (*Primitive_BooleanValue) isPrimitive_OneofValue() {}

func (*Primitive_ColorArgb8Value) isPrimitive_OneofValue() {}

func (*Primitive_ColorRgb8Value) isPrimitive_OneofValue() {}

func (*Primitive_ColorArgb4Value) isPrimitive_OneofValue() {}

func (*Primitive_ColorRgb4Value) isPrimitive_OneofValue() {}

func (*Primitive_DimensionValueDeprecated) isPrimitive_OneofValue() {}

func (*Primitive_FractionValueDeprecated) isPrimitive_OneofValue() {}

// A value that represents an XML attribute and what values it accepts.
type Attribute struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A bitmask of types that this XML attribute accepts. Corresponds to the flags in the
	// enum FormatFlags.
	FormatFlags uint32 `protobuf:"varint,1,opt,name=format_flags,json=formatFlags,proto3" json:"format_flags,omitempty"`
	// The smallest integer allowed for this XML attribute. Only makes sense if the format includes
	// FormatFlags::INTEGER.
	MinInt int32 `protobuf:"varint,2,opt,name=min_int,json=minInt,proto3" json:"min_int,omitempty"`
	// The largest integer allowed for this XML attribute. Only makes sense if the format includes
	// FormatFlags::INTEGER.
	MaxInt int32 `protobuf:"varint,3,opt,name=max_int,json=maxInt,proto3" json:"max_int,omitempty"`
	// The set of enums/flags defined in this attribute. Only makes sense if the format includes
	// either FormatFlags::ENUM or FormatFlags::FLAGS. Having both is an error.
	Symbol        []*Attribute_Symbol `protobuf:"bytes,4,rep,name=symbol,proto3" json:"symbol,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Attribute) Reset() {
	*x = Attribute{}
	mi := &file_Resources_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attribute) ProtoMessage() {}

func (x *Attribute) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attribute.ProtoReflect.Descriptor instead.
func (*Attribute) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{28}
}

func (x *Attribute) GetFormatFlags() uint32 {
	if x != nil {
		return x.FormatFlags
	}
	return 0
}

func (x *Attribute) GetMinInt() int32 {
	if x != nil {
		return x.MinInt
	}
	return 0
}

func (x *Attribute) GetMaxInt() int32 {
	if x != nil {
		return x.MaxInt
	}
	return 0
}

func (x *Attribute) GetSymbol() []*Attribute_Symbol {
	if x != nil {
		return x.Symbol
	}
	return nil
}

// A value that represents a style.
type Style struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The optinal style from which this style inherits attributes.
	Parent *Reference `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// The source file information of the parent inheritance declaration.
	ParentSource *Source `protobuf:"bytes,2,opt,name=parent_source,json=parentSource,proto3" json:"parent_source,omitempty"`
	// The set of XML attribute/value pairs for this style.
	Entry         []*Style_Entry `protobuf:"bytes,3,rep,name=entry,proto3" json:"entry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Style) Reset() {
	*x = Style{}
	mi := &file_Resources_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Style) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Style) ProtoMessage() {}

func (x *Style) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Style.ProtoReflect.Descriptor instead.
func (*Style) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{29}
}

func (x *Style) GetParent() *Reference {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *Style) GetParentSource() *Source {
	if x != nil {
		return x.ParentSource
	}
	return nil
}

func (x *Style) GetEntry() []*Style_Entry {
	if x != nil {
		return x.Entry
	}
	return nil
}

// A value that represents a <declare-styleable> XML resource. These are not real resources and
// only end up as Java fields in the generated R.java. They do not end up in the binary ARSC file.
type Styleable struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The set of attribute declarations.
	Entry         []*Styleable_Entry `protobuf:"bytes,1,rep,name=entry,proto3" json:"entry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Styleable) Reset() {
	*x = Styleable{}
	mi := &file_Resources_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Styleable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Styleable) ProtoMessage() {}

func (x *Styleable) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Styleable.ProtoReflect.Descriptor instead.
func (*Styleable) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{30}
}

func (x *Styleable) GetEntry() []*Styleable_Entry {
	if x != nil {
		return x.Entry
	}
	return nil
}

// A value that represents an array of resource values.
type Array struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of array elements.
	Element       []*Array_Element `protobuf:"bytes,1,rep,name=element,proto3" json:"element,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Array) Reset() {
	*x = Array{}
	mi := &file_Resources_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Array) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Array) ProtoMessage() {}

func (x *Array) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Array.ProtoReflect.Descriptor instead.
func (*Array) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{31}
}

func (x *Array) GetElement() []*Array_Element {
	if x != nil {
		return x.Element
	}
	return nil
}

// A value that represents a string and its many variations based on plurality.
type Plural struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The set of arity/plural mappings.
	Entry         []*Plural_Entry `protobuf:"bytes,1,rep,name=entry,proto3" json:"entry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Plural) Reset() {
	*x = Plural{}
	mi := &file_Resources_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Plural) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plural) ProtoMessage() {}

func (x *Plural) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plural.ProtoReflect.Descriptor instead.
func (*Plural) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{32}
}

func (x *Plural) GetEntry() []*Plural_Entry {
	if x != nil {
		return x.Entry
	}
	return nil
}

// Defines an abstract XmlNode that must be either an XmlElement, or
// a text node represented by a string.
type XmlNode struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Node:
	//
	//	*XmlNode_Element
	//	*XmlNode_Text
	Node isXmlNode_Node `protobuf_oneof:"node"`
	// Source line and column info.
	Source        *SourcePosition `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *XmlNode) Reset() {
	*x = XmlNode{}
	mi := &file_Resources_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *XmlNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XmlNode) ProtoMessage() {}

func (x *XmlNode) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XmlNode.ProtoReflect.Descriptor instead.
func (*XmlNode) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{33}
}

func (x *XmlNode) GetNode() isXmlNode_Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *XmlNode) GetElement() *XmlElement {
	if x != nil {
		if x, ok := x.Node.(*XmlNode_Element); ok {
			return x.Element
		}
	}
	return nil
}

func (x *XmlNode) GetText() string {
	if x != nil {
		if x, ok := x.Node.(*XmlNode_Text); ok {
			return x.Text
		}
	}
	return ""
}

func (x *XmlNode) GetSource() *SourcePosition {
	if x != nil {
		return x.Source
	}
	return nil
}

type isXmlNode_Node interface {
	isXmlNode_Node()
}

type XmlNode_Element struct {
	Element *XmlElement `protobuf:"bytes,1,opt,name=element,proto3,oneof"`
}

type XmlNode_Text struct {
	Text string `protobuf:"bytes,2,opt,name=text,proto3,oneof"`
}

func (*XmlNode_Element) isXmlNode_Node() {}

func (*XmlNode_Text) isXmlNode_Node() {}

// An <element> in an XML document.
type XmlElement struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Namespaces defined on this element.
	NamespaceDeclaration []*XmlNamespace `protobuf:"bytes,1,rep,name=namespace_declaration,json=namespaceDeclaration,proto3" json:"namespace_declaration,omitempty"`
	// The namespace URI of this element.
	NamespaceUri string `protobuf:"bytes,2,opt,name=namespace_uri,json=namespaceUri,proto3" json:"namespace_uri,omitempty"`
	// The name of this element.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// The attributes of this element.
	Attribute []*XmlAttribute `protobuf:"bytes,4,rep,name=attribute,proto3" json:"attribute,omitempty"`
	// The children of this element.
	Child         []*XmlNode `protobuf:"bytes,5,rep,name=child,proto3" json:"child,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *XmlElement) Reset() {
	*x = XmlElement{}
	mi := &file_Resources_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *XmlElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XmlElement) ProtoMessage() {}

func (x *XmlElement) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XmlElement.ProtoReflect.Descriptor instead.
func (*XmlElement) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{34}
}

func (x *XmlElement) GetNamespaceDeclaration() []*XmlNamespace {
	if x != nil {
		return x.NamespaceDeclaration
	}
	return nil
}

func (x *XmlElement) GetNamespaceUri() string {
	if x != nil {
		return x.NamespaceUri
	}
	return ""
}

func (x *XmlElement) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *XmlElement) GetAttribute() []*XmlAttribute {
	if x != nil {
		return x.Attribute
	}
	return nil
}

func (x *XmlElement) GetChild() []*XmlNode {
	if x != nil {
		return x.Child
	}
	return nil
}

// A namespace declaration on an XmlElement (xmlns:android="http://...").
type XmlNamespace struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Prefix string                 `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Uri    string                 `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// Source line and column info.
	Source        *SourcePosition `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *XmlNamespace) Reset() {
	*x = XmlNamespace{}
	mi := &file_Resources_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *XmlNamespace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XmlNamespace) ProtoMessage() {}

func (x *XmlNamespace) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XmlNamespace.ProtoReflect.Descriptor instead.
func (*XmlNamespace) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{35}
}

func (x *XmlNamespace) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *XmlNamespace) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *XmlNamespace) GetSource() *SourcePosition {
	if x != nil {
		return x.Source
	}
	return nil
}

// An attribute defined on an XmlElement (android:text="...").
type XmlAttribute struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	NamespaceUri string                 `protobuf:"bytes,1,opt,name=namespace_uri,json=namespaceUri,proto3" json:"namespace_uri,omitempty"`
	Name         string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Value        string                 `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	// Source line and column info.
	Source *SourcePosition `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	// The optional resource ID (0xPPTTEEEE) of the attribute.
	ResourceId uint32 `protobuf:"varint,5,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	// The optional interpreted/compiled version of the `value` string.
	CompiledItem  *Item `protobuf:"bytes,6,opt,name=compiled_item,json=compiledItem,proto3" json:"compiled_item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *XmlAttribute) Reset() {
	*x = XmlAttribute{}
	mi := &file_Resources_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *XmlAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XmlAttribute) ProtoMessage() {}

func (x *XmlAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XmlAttribute.ProtoReflect.Descriptor instead.
func (*XmlAttribute) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{36}
}

func (x *XmlAttribute) GetNamespaceUri() string {
	if x != nil {
		return x.NamespaceUri
	}
	return ""
}

func (x *XmlAttribute) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *XmlAttribute) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *XmlAttribute) GetSource() *SourcePosition {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *XmlAttribute) GetResourceId() uint32 {
	if x != nil {
		return x.ResourceId
	}
	return 0
}

func (x *XmlAttribute) GetCompiledItem() *Item {
	if x != nil {
		return x.CompiledItem
	}
	return nil
}

type MacroBody struct {
	state                  protoimpl.MessageState   `protogen:"open.v1"`
	RawString              string                   `protobuf:"bytes,1,opt,name=raw_string,json=rawString,proto3" json:"raw_string,omitempty"`
	StyleString            *StyleString             `protobuf:"bytes,2,opt,name=style_string,json=styleString,proto3" json:"style_string,omitempty"`
	UntranslatableSections []*UntranslatableSection `protobuf:"bytes,3,rep,name=untranslatable_sections,json=untranslatableSections,proto3" json:"untranslatable_sections,omitempty"`
	NamespaceStack         []*NamespaceAlias        `protobuf:"bytes,4,rep,name=namespace_stack,json=namespaceStack,proto3" json:"namespace_stack,omitempty"`
	Source                 *SourcePosition          `protobuf:"bytes,5,opt,name=source,proto3" json:"source,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *MacroBody) Reset() {
	*x = MacroBody{}
	mi := &file_Resources_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MacroBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MacroBody) ProtoMessage() {}

func (x *MacroBody) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MacroBody.ProtoReflect.Descriptor instead.
func (*MacroBody) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{37}
}

func (x *MacroBody) GetRawString() string {
	if x != nil {
		return x.RawString
	}
	return ""
}

func (x *MacroBody) GetStyleString() *StyleString {
	if x != nil {
		return x.StyleString
	}
	return nil
}

func (x *MacroBody) GetUntranslatableSections() []*UntranslatableSection {
	if x != nil {
		return x.UntranslatableSections
	}
	return nil
}

func (x *MacroBody) GetNamespaceStack() []*NamespaceAlias {
	if x != nil {
		return x.NamespaceStack
	}
	return nil
}

func (x *MacroBody) GetSource() *SourcePosition {
	if x != nil {
		return x.Source
	}
	return nil
}

type NamespaceAlias struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Prefix        string                 `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	PackageName   string                 `protobuf:"bytes,2,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	IsPrivate     bool                   `protobuf:"varint,3,opt,name=is_private,json=isPrivate,proto3" json:"is_private,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NamespaceAlias) Reset() {
	*x = NamespaceAlias{}
	mi := &file_Resources_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NamespaceAlias) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceAlias) ProtoMessage() {}

func (x *NamespaceAlias) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceAlias.ProtoReflect.Descriptor instead.
func (*NamespaceAlias) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{38}
}

func (x *NamespaceAlias) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *NamespaceAlias) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *NamespaceAlias) GetIsPrivate() bool {
	if x != nil {
		return x.IsPrivate
	}
	return false
}

type StyleString struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Str           string                 `protobuf:"bytes,1,opt,name=str,proto3" json:"str,omitempty"`
	Spans         []*StyleString_Span    `protobuf:"bytes,2,rep,name=spans,proto3" json:"spans,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StyleString) Reset() {
	*x = StyleString{}
	mi := &file_Resources_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StyleString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StyleString) ProtoMessage() {}

func (x *StyleString) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StyleString.ProtoReflect.Descriptor instead.
func (*StyleString) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{39}
}

func (x *StyleString) GetStr() string {
	if x != nil {
		return x.Str
	}
	return ""
}

func (x *StyleString) GetSpans() []*StyleString_Span {
	if x != nil {
		return x.Spans
	}
	return nil
}

type UntranslatableSection struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartIndex    uint64                 `protobuf:"varint,1,opt,name=start_index,json=startIndex,proto3" json:"start_index,omitempty"`
	EndIndex      uint64                 `protobuf:"varint,2,opt,name=end_index,json=endIndex,proto3" json:"end_index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UntranslatableSection) Reset() {
	*x = UntranslatableSection{}
	mi := &file_Resources_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UntranslatableSection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UntranslatableSection) ProtoMessage() {}

func (x *UntranslatableSection) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UntranslatableSection.ProtoReflect.Descriptor instead.
func (*UntranslatableSection) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{40}
}

func (x *UntranslatableSection) GetStartIndex() uint64 {
	if x != nil {
		return x.StartIndex
	}
	return 0
}

func (x *UntranslatableSection) GetEndIndex() uint64 {
	if x != nil {
		return x.EndIndex
	}
	return 0
}

// A Span marks a region of the string text that is styled.
type StyledString_Span struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the tag, and its attributes, encoded as follows:
	// tag_name;attr1=value1;attr2=value2;[...]
	Tag string `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	// The first character position this span applies to, in UTF-16 offset.
	FirstChar uint32 `protobuf:"varint,2,opt,name=first_char,json=firstChar,proto3" json:"first_char,omitempty"`
	// The last character position this span applies to, in UTF-16 offset.
	LastChar      uint32 `protobuf:"varint,3,opt,name=last_char,json=lastChar,proto3" json:"last_char,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StyledString_Span) Reset() {
	*x = StyledString_Span{}
	mi := &file_Resources_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StyledString_Span) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StyledString_Span) ProtoMessage() {}

func (x *StyledString_Span) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StyledString_Span.ProtoReflect.Descriptor instead.
func (*StyledString_Span) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{25, 0}
}

func (x *StyledString_Span) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *StyledString_Span) GetFirstChar() uint32 {
	if x != nil {
		return x.FirstChar
	}
	return 0
}

func (x *StyledString_Span) GetLastChar() uint32 {
	if x != nil {
		return x.LastChar
	}
	return 0
}

type Primitive_NullType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Primitive_NullType) Reset() {
	*x = Primitive_NullType{}
	mi := &file_Resources_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Primitive_NullType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Primitive_NullType) ProtoMessage() {}

func (x *Primitive_NullType) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Primitive_NullType.ProtoReflect.Descriptor instead.
func (*Primitive_NullType) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{27, 0}
}

type Primitive_EmptyType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Primitive_EmptyType) Reset() {
	*x = Primitive_EmptyType{}
	mi := &file_Resources_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Primitive_EmptyType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Primitive_EmptyType) ProtoMessage() {}

func (x *Primitive_EmptyType) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Primitive_EmptyType.ProtoReflect.Descriptor instead.
func (*Primitive_EmptyType) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{27, 1}
}

// A Symbol used to represent an enum or a flag.
type Attribute_Symbol struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Where the enum/flag item was defined.
	Source *Source `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	// Any comments associated with the enum or flag.
	Comment string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	// The name of the enum/flag as a reference. Enums/flag items are generated as ID resource
	// values.
	Name *Reference `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// The value of the enum/flag.
	Value uint32 `protobuf:"varint,4,opt,name=value,proto3" json:"value,omitempty"`
	// The data type of the enum/flag as defined in android::Res_value.
	Type          uint32 `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Attribute_Symbol) Reset() {
	*x = Attribute_Symbol{}
	mi := &file_Resources_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attribute_Symbol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attribute_Symbol) ProtoMessage() {}

func (x *Attribute_Symbol) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attribute_Symbol.ProtoReflect.Descriptor instead.
func (*Attribute_Symbol) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{28, 0}
}

func (x *Attribute_Symbol) GetSource() *Source {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *Attribute_Symbol) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Attribute_Symbol) GetName() *Reference {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *Attribute_Symbol) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Attribute_Symbol) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

// An XML attribute/value pair defined in the style.
type Style_Entry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Where the entry was defined.
	Source *Source `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	// Any comments associated with the entry.
	Comment string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	// A reference to the XML attribute.
	Key *Reference `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	// The Item defined for this XML attribute.
	Item          *Item `protobuf:"bytes,4,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Style_Entry) Reset() {
	*x = Style_Entry{}
	mi := &file_Resources_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Style_Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Style_Entry) ProtoMessage() {}

func (x *Style_Entry) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Style_Entry.ProtoReflect.Descriptor instead.
func (*Style_Entry) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{29, 0}
}

func (x *Style_Entry) GetSource() *Source {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *Style_Entry) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Style_Entry) GetKey() *Reference {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Style_Entry) GetItem() *Item {
	if x != nil {
		return x.Item
	}
	return nil
}

// An attribute defined for this styleable.
type Styleable_Entry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Where the attribute was defined within the <declare-styleable> block.
	Source *Source `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	// Any comments associated with the declaration.
	Comment string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	// The reference to the attribute.
	Attr          *Reference `protobuf:"bytes,3,opt,name=attr,proto3" json:"attr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Styleable_Entry) Reset() {
	*x = Styleable_Entry{}
	mi := &file_Resources_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Styleable_Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Styleable_Entry) ProtoMessage() {}

func (x *Styleable_Entry) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Styleable_Entry.ProtoReflect.Descriptor instead.
func (*Styleable_Entry) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{30, 0}
}

func (x *Styleable_Entry) GetSource() *Source {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *Styleable_Entry) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Styleable_Entry) GetAttr() *Reference {
	if x != nil {
		return x.Attr
	}
	return nil
}

// A single element of the array.
type Array_Element struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Where the element was defined.
	Source *Source `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	// Any comments associated with the element.
	Comment string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	// The value assigned to this element.
	Item          *Item `protobuf:"bytes,3,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Array_Element) Reset() {
	*x = Array_Element{}
	mi := &file_Resources_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Array_Element) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Array_Element) ProtoMessage() {}

func (x *Array_Element) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Array_Element.ProtoReflect.Descriptor instead.
func (*Array_Element) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{31, 0}
}

func (x *Array_Element) GetSource() *Source {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *Array_Element) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Array_Element) GetItem() *Item {
	if x != nil {
		return x.Item
	}
	return nil
}

// The plural value for a given arity.
type Plural_Entry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Where the plural was defined.
	Source *Source `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	// Any comments associated with the plural.
	Comment string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	// The arity of the plural.
	Arity Plural_Arity `protobuf:"varint,3,opt,name=arity,proto3,enum=aapt.pb.Plural_Arity" json:"arity,omitempty"`
	// The value assigned to this plural.
	Item          *Item `protobuf:"bytes,4,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Plural_Entry) Reset() {
	*x = Plural_Entry{}
	mi := &file_Resources_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Plural_Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plural_Entry) ProtoMessage() {}

func (x *Plural_Entry) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plural_Entry.ProtoReflect.Descriptor instead.
func (*Plural_Entry) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{32, 0}
}

func (x *Plural_Entry) GetSource() *Source {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *Plural_Entry) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Plural_Entry) GetArity() Plural_Arity {
	if x != nil {
		return x.Arity
	}
	return Plural_ZERO
}

func (x *Plural_Entry) GetItem() *Item {
	if x != nil {
		return x.Item
	}
	return nil
}

type StyleString_Span struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	StartIndex    uint32                 `protobuf:"varint,2,opt,name=start_index,json=startIndex,proto3" json:"start_index,omitempty"`
	EndIndex      uint32                 `protobuf:"varint,3,opt,name=end_index,json=endIndex,proto3" json:"end_index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StyleString_Span) Reset() {
	*x = StyleString_Span{}
	mi := &file_Resources_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StyleString_Span) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StyleString_Span) ProtoMessage() {}

func (x *StyleString_Span) ProtoReflect() protoreflect.Message {
	mi := &file_Resources_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StyleString_Span.ProtoReflect.Descriptor instead.
func (*StyleString_Span) Descriptor() ([]byte, []int) {
	return file_Resources_proto_rawDescGZIP(), []int{39, 0}
}

func (x *StyleString_Span) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StyleString_Span) GetStartIndex() uint32 {
	if x != nil {
		return x.StartIndex
	}
	return 0
}

func (x *StyleString_Span) GetEndIndex() uint32 {
	if x != nil {
		return x.EndIndex
	}
	return 0
}

var File_Resources_proto protoreflect.FileDescriptor

const file_Resources_proto_rawDesc = "" +
	"\n" +
	"\x0fResources.proto\x12\aaapt.pb\x1a\x13Configuration.proto\" \n" +
	"\n" +
	"StringPool\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\"V\n" +
	"\x0eSourcePosition\x12\x1f\n" +
	"\vline_number\x18\x01 \x01(\rR\n" +
	"lineNumber\x12#\n" +
	"\rcolumn_number\x18\x02 \x01(\rR\fcolumnNumber\"X\n" +
	"\x06Source\x12\x19\n" +
	"\bpath_idx\x18\x01 \x01(\rR\apathIdx\x123\n" +
	"\bposition\x18\x02 \x01(\v2\x17.aapt.pb.SourcePositionR\bposition\"?\n" +
	"\x0fToolFingerprint\x12\x12\n" +
	"\x04tool\x18\x01 \x01(\tR\x04tool\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\"\xee\x01\n" +
	"\rResourceTable\x124\n" +
	"\vsource_pool\x18\x01 \x01(\v2\x13.aapt.pb.StringPoolR\n" +
	"sourcePool\x12*\n" +
	"\apackage\x18\x02 \x03(\v2\x10.aapt.pb.PackageR\apackage\x126\n" +
	"\voverlayable\x18\x03 \x03(\v2\x14.aapt.pb.OverlayableR\voverlayable\x12C\n" +
	"\x10tool_fingerprint\x18\x04 \x03(\v2\x18.aapt.pb.ToolFingerprintR\x0ftoolFingerprint\"\x1b\n" +
	"\tPackageId\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\"\x82\x01\n" +
	"\aPackage\x121\n" +
	"\n" +
	"package_id\x18\x01 \x01(\v2\x12.aapt.pb.PackageIdR\tpackageId\x12!\n" +
	"\fpackage_name\x18\x02 \x01(\tR\vpackageName\x12!\n" +
	"\x04type\x18\x03 \x03(\v2\r.aapt.pb.TypeR\x04type\"\x18\n" +
	"\x06TypeId\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\"j\n" +
	"\x04Type\x12(\n" +
	"\atype_id\x18\x01 \x01(\v2\x0f.aapt.pb.TypeIdR\x06typeId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12$\n" +
	"\x05entry\x18\x03 \x03(\v2\x0e.aapt.pb.EntryR\x05entry\"\xce\x01\n" +
	"\n" +
	"Visibility\x12/\n" +
	"\x05level\x18\x01 \x01(\x0e2\x19.aapt.pb.Visibility.LevelR\x05level\x12'\n" +
	"\x06source\x18\x02 \x01(\v2\x0f.aapt.pb.SourceR\x06source\x12\x18\n" +
	"\acomment\x18\x03 \x01(\tR\acomment\x12\x1d\n" +
	"\n" +
	"staged_api\x18\x04 \x01(\bR\tstagedApi\"-\n" +
	"\x05Level\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aPRIVATE\x10\x01\x12\n" +
	"\n" +
	"\x06PUBLIC\x10\x02\"M\n" +
	"\bAllowNew\x12'\n" +
	"\x06source\x18\x01 \x01(\v2\x0f.aapt.pb.SourceR\x06source\x12\x18\n" +
	"\acomment\x18\x02 \x01(\tR\acomment\"`\n" +
	"\vOverlayable\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12'\n" +
	"\x06source\x18\x02 \x01(\v2\x0f.aapt.pb.SourceR\x06source\x12\x14\n" +
	"\x05actor\x18\x03 \x01(\tR\x05actor\"\xbe\x02\n" +
	"\x0fOverlayableItem\x12'\n" +
	"\x06source\x18\x01 \x01(\v2\x0f.aapt.pb.SourceR\x06source\x12\x18\n" +
	"\acomment\x18\x02 \x01(\tR\acomment\x127\n" +
	"\x06policy\x18\x03 \x03(\x0e2\x1f.aapt.pb.OverlayableItem.PolicyR\x06policy\x12'\n" +
	"\x0foverlayable_idx\x18\x04 \x01(\rR\x0eoverlayableIdx\"\x85\x01\n" +
	"\x06Policy\x12\b\n" +
	"\x04NONE\x10\x00\x12\n" +
	"\n" +
	"\x06PUBLIC\x10\x01\x12\n" +
	"\n" +
	"\x06SYSTEM\x10\x02\x12\n" +
	"\n" +
	"\x06VENDOR\x10\x03\x12\v\n" +
	"\aPRODUCT\x10\x04\x12\r\n" +
	"\tSIGNATURE\x10\x05\x12\a\n" +
	"\x03ODM\x10\x06\x12\a\n" +
	"\x03OEM\x10\a\x12\t\n" +
	"\x05ACTOR\x10\b\x12\x14\n" +
	"\x10CONFIG_SIGNATURE\x10\t\"P\n" +
	"\bStagedId\x12'\n" +
	"\x06source\x18\x01 \x01(\v2\x0f.aapt.pb.SourceR\x06source\x12\x1b\n" +
	"\tstaged_id\x18\x02 \x01(\rR\bstagedId\"\x19\n" +
	"\aEntryId\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\"\xdb\x02\n" +
	"\x05Entry\x12+\n" +
	"\bentry_id\x18\x01 \x01(\v2\x10.aapt.pb.EntryIdR\aentryId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x123\n" +
	"\n" +
	"visibility\x18\x03 \x01(\v2\x13.aapt.pb.VisibilityR\n" +
	"visibility\x12.\n" +
	"\tallow_new\x18\x04 \x01(\v2\x11.aapt.pb.AllowNewR\ballowNew\x12C\n" +
	"\x10overlayable_item\x18\x05 \x01(\v2\x18.aapt.pb.OverlayableItemR\x0foverlayableItem\x127\n" +
	"\fconfig_value\x18\x06 \x03(\v2\x14.aapt.pb.ConfigValueR\vconfigValue\x12.\n" +
	"\tstaged_id\x18\a \x01(\v2\x11.aapt.pb.StagedIdR\bstagedId\"c\n" +
	"\vConfigValue\x12.\n" +
	"\x06config\x18\x01 \x01(\v2\x16.aapt.pb.ConfigurationR\x06config\x12$\n" +
	"\x05value\x18\x02 \x01(\v2\x0e.aapt.pb.ValueR\x05value\"\xcd\x01\n" +
	"\x05Value\x12'\n" +
	"\x06source\x18\x01 \x01(\v2\x0f.aapt.pb.SourceR\x06source\x12\x18\n" +
	"\acomment\x18\x02 \x01(\tR\acomment\x12\x12\n" +
	"\x04weak\x18\x03 \x01(\bR\x04weak\x12#\n" +
	"\x04item\x18\x04 \x01(\v2\r.aapt.pb.ItemH\x00R\x04item\x12?\n" +
	"\x0ecompound_value\x18\x05 \x01(\v2\x16.aapt.pb.CompoundValueH\x00R\rcompoundValueB\a\n" +
	"\x05value\"\xba\x02\n" +
	"\x04Item\x12&\n" +
	"\x03ref\x18\x01 \x01(\v2\x12.aapt.pb.ReferenceH\x00R\x03ref\x12#\n" +
	"\x03str\x18\x02 \x01(\v2\x0f.aapt.pb.StringH\x00R\x03str\x12-\n" +
	"\araw_str\x18\x03 \x01(\v2\x12.aapt.pb.RawStringH\x00R\x06rawStr\x126\n" +
	"\n" +
	"styled_str\x18\x04 \x01(\v2\x15.aapt.pb.StyledStringH\x00R\tstyledStr\x12,\n" +
	"\x04file\x18\x05 \x01(\v2\x16.aapt.pb.FileReferenceH\x00R\x04file\x12\x1d\n" +
	"\x02id\x18\x06 \x01(\v2\v.aapt.pb.IdH\x00R\x02id\x12(\n" +
	"\x04prim\x18\a \x01(\v2\x12.aapt.pb.PrimitiveH\x00R\x04primB\a\n" +
	"\x05value\"\x9d\x02\n" +
	"\rCompoundValue\x12(\n" +
	"\x04attr\x18\x01 \x01(\v2\x12.aapt.pb.AttributeH\x00R\x04attr\x12&\n" +
	"\x05style\x18\x02 \x01(\v2\x0e.aapt.pb.StyleH\x00R\x05style\x122\n" +
	"\tstyleable\x18\x03 \x01(\v2\x12.aapt.pb.StyleableH\x00R\tstyleable\x12&\n" +
	"\x05array\x18\x04 \x01(\v2\x0e.aapt.pb.ArrayH\x00R\x05array\x12)\n" +
	"\x06plural\x18\x05 \x01(\v2\x0f.aapt.pb.PluralH\x00R\x06plural\x12*\n" +
	"\x05macro\x18\x06 \x01(\v2\x12.aapt.pb.MacroBodyH\x00R\x05macroB\a\n" +
	"\x05value\"\x1f\n" +
	"\aBoolean\x12\x14\n" +
	"\x05value\x18\x01 \x01(\bR\x05value\"\x89\x02\n" +
	"\tReference\x12+\n" +
	"\x04type\x18\x01 \x01(\x0e2\x17.aapt.pb.Reference.TypeR\x04type\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\rR\x02id\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x18\n" +
	"\aprivate\x18\x04 \x01(\bR\aprivate\x12/\n" +
	"\n" +
	"is_dynamic\x18\x05 \x01(\v2\x10.aapt.pb.BooleanR\tisDynamic\x12\x1d\n" +
	"\n" +
	"type_flags\x18\x06 \x01(\rR\ttypeFlags\x12\x1b\n" +
	"\tallow_raw\x18\a \x01(\bR\ballowRaw\"$\n" +
	"\x04Type\x12\r\n" +
	"\tREFERENCE\x10\x00\x12\r\n" +
	"\tATTRIBUTE\x10\x01\"\x04\n" +
	"\x02Id\"\x1e\n" +
	"\x06String\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\"!\n" +
	"\tRawString\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\"\xaa\x01\n" +
	"\fStyledString\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12.\n" +
	"\x04span\x18\x02 \x03(\v2\x1a.aapt.pb.StyledString.SpanR\x04span\x1aT\n" +
	"\x04Span\x12\x10\n" +
	"\x03tag\x18\x01 \x01(\tR\x03tag\x12\x1d\n" +
	"\n" +
	"first_char\x18\x02 \x01(\rR\tfirstChar\x12\x1b\n" +
	"\tlast_char\x18\x03 \x01(\rR\blastChar\"\x91\x01\n" +
	"\rFileReference\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12/\n" +
	"\x04type\x18\x02 \x01(\x0e2\x1b.aapt.pb.FileReference.TypeR\x04type\";\n" +
	"\x04Type\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\a\n" +
	"\x03PNG\x10\x01\x12\x0e\n" +
	"\n" +
	"BINARY_XML\x10\x02\x12\r\n" +
	"\tPROTO_XML\x10\x03\"\xee\x05\n" +
	"\tPrimitive\x12<\n" +
	"\n" +
	"null_value\x18\x01 \x01(\v2\x1b.aapt.pb.Primitive.NullTypeH\x00R\tnullValue\x12?\n" +
	"\vempty_value\x18\x02 \x01(\v2\x1c.aapt.pb.Primitive.EmptyTypeH\x00R\n" +
	"emptyValue\x12!\n" +
	"\vfloat_value\x18\x03 \x01(\x02H\x00R\n" +
	"floatValue\x12)\n" +
	"\x0fdimension_value\x18\r \x01(\rH\x00R\x0edimensionValue\x12'\n" +
	"\x0efraction_value\x18\x0e \x01(\rH\x00R\rfractionValue\x12,\n" +
	"\x11int_decimal_value\x18\x06 \x01(\x05H\x00R\x0fintDecimalValue\x124\n" +
	"\x15int_hexadecimal_value\x18\a \x01(\rH\x00R\x13intHexadecimalValue\x12%\n" +
	"\rboolean_value\x18\b \x01(\bH\x00R\fbooleanValue\x12,\n" +
	"\x11color_argb8_value\x18\t \x01(\rH\x00R\x0fcolorArgb8Value\x12*\n" +
	"\x10color_rgb8_value\x18\n" +
	" \x01(\rH\x00R\x0ecolorRgb8Value\x12,\n" +
	"\x11color_argb4_value\x18\v \x01(\rH\x00R\x0fcolorArgb4Value\x12*\n" +
	"\x10color_rgb4_value\x18\f \x01(\rH\x00R\x0ecolorRgb4Value\x12B\n" +
	"\x1adimension_value_deprecated\x18\x04 \x01(\x02B\x02\x18\x01H\x00R\x18dimensionValueDeprecated\x12@\n" +
	"\x19fraction_value_deprecated\x18\x05 \x01(\x02B\x02\x18\x01H\x00R\x17fractionValueDeprecated\x1a\n" +
	"\n" +
	"\bNullType\x1a\v\n" +
	"\tEmptyTypeB\r\n" +
	"\voneof_value\"\xda\x03\n" +
	"\tAttribute\x12!\n" +
	"\fformat_flags\x18\x01 \x01(\rR\vformatFlags\x12\x17\n" +
	"\amin_int\x18\x02 \x01(\x05R\x06minInt\x12\x17\n" +
	"\amax_int\x18\x03 \x01(\x05R\x06maxInt\x121\n" +
	"\x06symbol\x18\x04 \x03(\v2\x19.aapt.pb.Attribute.SymbolR\x06symbol\x1a\x9d\x01\n" +
	"\x06Symbol\x12'\n" +
	"\x06source\x18\x01 \x01(\v2\x0f.aapt.pb.SourceR\x06source\x12\x18\n" +
	"\acomment\x18\x02 \x01(\tR\acomment\x12&\n" +
	"\x04name\x18\x03 \x01(\v2\x12.aapt.pb.ReferenceR\x04name\x12\x14\n" +
	"\x05value\x18\x04 \x01(\rR\x05value\x12\x12\n" +
	"\x04type\x18\x05 \x01(\rR\x04type\"\xa4\x01\n" +
	"\vFormatFlags\x12\b\n" +
	"\x04NONE\x10\x00\x12\t\n" +
	"\x03ANY\x10\xff\xff\x03\x12\r\n" +
	"\tREFERENCE\x10\x01\x12\n" +
	"\n" +
	"\x06STRING\x10\x02\x12\v\n" +
	"\aINTEGER\x10\x04\x12\v\n" +
	"\aBOOLEAN\x10\b\x12\t\n" +
	"\x05COLOR\x10\x10\x12\t\n" +
	"\x05FLOAT\x10 \x12\r\n" +
	"\tDIMENSION\x10@\x12\r\n" +
	"\bFRACTION\x10\x80\x01\x12\n" +
	"\n" +
	"\x04ENUM\x10\x80\x80\x04\x12\v\n" +
	"\x05FLAGS\x10\x80\x80\b\"\xab\x02\n" +
	"\x05Style\x12*\n" +
	"\x06parent\x18\x01 \x01(\v2\x12.aapt.pb.ReferenceR\x06parent\x124\n" +
	"\rparent_source\x18\x02 \x01(\v2\x0f.aapt.pb.SourceR\fparentSource\x12*\n" +
	"\x05entry\x18\x03 \x03(\v2\x14.aapt.pb.Style.EntryR\x05entry\x1a\x93\x01\n" +
	"\x05Entry\x12'\n" +
	"\x06source\x18\x01 \x01(\v2\x0f.aapt.pb.SourceR\x06source\x12\x18\n" +
	"\acomment\x18\x02 \x01(\tR\acomment\x12$\n" +
	"\x03key\x18\x03 \x01(\v2\x12.aapt.pb.ReferenceR\x03key\x12!\n" +
	"\x04item\x18\x04 \x01(\v2\r.aapt.pb.ItemR\x04item\"\xaf\x01\n" +
	"\tStyleable\x12.\n" +
	"\x05entry\x18\x01 \x03(\v2\x18.aapt.pb.Styleable.EntryR\x05entry\x1ar\n" +
	"\x05Entry\x12'\n" +
	"\x06source\x18\x01 \x01(\v2\x0f.aapt.pb.SourceR\x06source\x12\x18\n" +
	"\acomment\x18\x02 \x01(\tR\acomment\x12&\n" +
	"\x04attr\x18\x03 \x01(\v2\x12.aapt.pb.ReferenceR\x04attr\"\xaa\x01\n" +
	"\x05Array\x120\n" +
	"\aelement\x18\x01 \x03(\v2\x16.aapt.pb.Array.ElementR\aelement\x1ao\n" +
	"\aElement\x12'\n" +
	"\x06source\x18\x01 \x01(\v2\x0f.aapt.pb.SourceR\x06source\x12\x18\n" +
	"\acomment\x18\x02 \x01(\tR\acomment\x12!\n" +
	"\x04item\x18\x03 \x01(\v2\r.aapt.pb.ItemR\x04item\"\x95\x02\n" +
	"\x06Plural\x12+\n" +
	"\x05entry\x18\x01 \x03(\v2\x15.aapt.pb.Plural.EntryR\x05entry\x1a\x9a\x01\n" +
	"\x05Entry\x12'\n" +
	"\x06source\x18\x01 \x01(\v2\x0f.aapt.pb.SourceR\x06source\x12\x18\n" +
	"\acomment\x18\x02 \x01(\tR\acomment\x12+\n" +
	"\x05arity\x18\x03 \x01(\x0e2\x15.aapt.pb.Plural.ArityR\x05arity\x12!\n" +
	"\x04item\x18\x04 \x01(\v2\r.aapt.pb.ItemR\x04item\"A\n" +
	"\x05Arity\x12\b\n" +
	"\x04ZERO\x10\x00\x12\a\n" +
	"\x03ONE\x10\x01\x12\a\n" +
	"\x03TWO\x10\x02\x12\a\n" +
	"\x03FEW\x10\x03\x12\b\n" +
	"\x04MANY\x10\x04\x12\t\n" +
	"\x05OTHER\x10\x05\"\x89\x01\n" +
	"\aXmlNode\x12/\n" +
	"\aelement\x18\x01 \x01(\v2\x13.aapt.pb.XmlElementH\x00R\aelement\x12\x14\n" +
	"\x04text\x18\x02 \x01(\tH\x00R\x04text\x12/\n" +
	"\x06source\x18\x03 \x01(\v2\x17.aapt.pb.SourcePositionR\x06sourceB\x06\n" +
	"\x04node\"\xee\x01\n" +
	"\n" +
	"XmlElement\x12J\n" +
	"\x15namespace_declaration\x18\x01 \x03(\v2\x15.aapt.pb.XmlNamespaceR\x14namespaceDeclaration\x12#\n" +
	"\rnamespace_uri\x18\x02 \x01(\tR\fnamespaceUri\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x123\n" +
	"\tattribute\x18\x04 \x03(\v2\x15.aapt.pb.XmlAttributeR\tattribute\x12&\n" +
	"\x05child\x18\x05 \x03(\v2\x10.aapt.pb.XmlNodeR\x05child\"i\n" +
	"\fXmlNamespace\x12\x16\n" +
	"\x06prefix\x18\x01 \x01(\tR\x06prefix\x12\x10\n" +
	"\x03uri\x18\x02 \x01(\tR\x03uri\x12/\n" +
	"\x06source\x18\x03 \x01(\v2\x17.aapt.pb.SourcePositionR\x06source\"\xe3\x01\n" +
	"\fXmlAttribute\x12#\n" +
	"\rnamespace_uri\x18\x01 \x01(\tR\fnamespaceUri\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x03 \x01(\tR\x05value\x12/\n" +
	"\x06source\x18\x04 \x01(\v2\x17.aapt.pb.SourcePositionR\x06source\x12\x1f\n" +
	"\vresource_id\x18\x05 \x01(\rR\n" +
	"resourceId\x122\n" +
	"\rcompiled_item\x18\x06 \x01(\v2\r.aapt.pb.ItemR\fcompiledItem\"\xaf\x02\n" +
	"\tMacroBody\x12\x1d\n" +
	"\n" +
	"raw_string\x18\x01 \x01(\tR\trawString\x127\n" +
	"\fstyle_string\x18\x02 \x01(\v2\x14.aapt.pb.StyleStringR\vstyleString\x12W\n" +
	"\x17untranslatable_sections\x18\x03 \x03(\v2\x1e.aapt.pb.UntranslatableSectionR\x16untranslatableSections\x12@\n" +
	"\x0fnamespace_stack\x18\x04 \x03(\v2\x17.aapt.pb.NamespaceAliasR\x0enamespaceStack\x12/\n" +
	"\x06source\x18\x05 \x01(\v2\x17.aapt.pb.SourcePositionR\x06source\"j\n" +
	"\x0eNamespaceAlias\x12\x16\n" +
	"\x06prefix\x18\x01 \x01(\tR\x06prefix\x12!\n" +
	"\fpackage_name\x18\x02 \x01(\tR\vpackageName\x12\x1d\n" +
	"\n" +
	"is_private\x18\x03 \x01(\bR\tisPrivate\"\xaa\x01\n" +
	"\vStyleString\x12\x10\n" +
	"\x03str\x18\x01 \x01(\tR\x03str\x12/\n" +
	"\x05spans\x18\x02 \x03(\v2\x19.aapt.pb.StyleString.SpanR\x05spans\x1aX\n" +
	"\x04Span\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1f\n" +
	"\vstart_index\x18\x02 \x01(\rR\n" +
	"startIndex\x12\x1b\n" +
	"\tend_index\x18\x03 \x01(\rR\bendIndex\"U\n" +
	"\x15UntranslatableSection\x12\x1f\n" +
	"\vstart_index\x18\x01 \x01(\x04R\n" +
	"startIndex\x12\x1b\n" +
	"\tend_index\x18\x02 \x01(\x04R\bendIndexB\tZ\a./;mainb\x06proto3"

var (
	file_Resources_proto_rawDescOnce sync.Once
	file_Resources_proto_rawDescData []byte
)

func file_Resources_proto_rawDescGZIP() []byte {
	file_Resources_proto_rawDescOnce.Do(func() {
		file_Resources_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_Resources_proto_rawDesc), len(file_Resources_proto_rawDesc)))
	})
	return file_Resources_proto_rawDescData
}

var file_Resources_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_Resources_proto_msgTypes = make([]protoimpl.MessageInfo, 50)
var file_Resources_proto_goTypes = []any{
	(Visibility_Level)(0),         // 0: aapt.pb.Visibility.Level
	(OverlayableItem_Policy)(0),   // 1: aapt.pb.OverlayableItem.Policy
	(Reference_Type)(0),           // 2: aapt.pb.Reference.Type
	(FileReference_Type)(0),       // 3: aapt.pb.FileReference.Type
	(Attribute_FormatFlags)(0),    // 4: aapt.pb.Attribute.FormatFlags
	(Plural_Arity)(0),             // 5: aapt.pb.Plural.Arity
	(*StringPool)(nil),            // 6: aapt.pb.StringPool
	(*SourcePosition)(nil),        // 7: aapt.pb.SourcePosition
	(*Source)(nil),                // 8: aapt.pb.Source
	(*ToolFingerprint)(nil),       // 9: aapt.pb.ToolFingerprint
	(*ResourceTable)(nil),         // 10: aapt.pb.ResourceTable
	(*PackageId)(nil),             // 11: aapt.pb.PackageId
	(*Package)(nil),               // 12: aapt.pb.Package
	(*TypeId)(nil),                // 13: aapt.pb.TypeId
	(*Type)(nil),                  // 14: aapt.pb.Type
	(*Visibility)(nil),            // 15: aapt.pb.Visibility
	(*AllowNew)(nil),              // 16: aapt.pb.AllowNew
	(*Overlayable)(nil),           // 17: aapt.pb.Overlayable
	(*OverlayableItem)(nil),       // 18: aapt.pb.OverlayableItem
	(*StagedId)(nil),              // 19: aapt.pb.StagedId
	(*EntryId)(nil),               // 20: aapt.pb.EntryId
	(*Entry)(nil),                 // 21: aapt.pb.Entry
	(*ConfigValue)(nil),           // 22: aapt.pb.ConfigValue
	(*Value)(nil),                 // 23: aapt.pb.Value
	(*Item)(nil),                  // 24: aapt.pb.Item
	(*CompoundValue)(nil),         // 25: aapt.pb.CompoundValue
	(*Boolean)(nil),               // 26: aapt.pb.Boolean
	(*Reference)(nil),             // 27: aapt.pb.Reference
	(*Id)(nil),                    // 28: aapt.pb.Id
	(*String)(nil),                // 29: aapt.pb.String
	(*RawString)(nil),             // 30: aapt.pb.RawString
	(*StyledString)(nil),          // 31: aapt.pb.StyledString
	(*FileReference)(nil),         // 32: aapt.pb.FileReference
	(*Primitive)(nil),             // 33: aapt.pb.Primitive
	(*Attribute)(nil),             // 34: aapt.pb.Attribute
	(*Style)(nil),                 // 35: aapt.pb.Style
	(*Styleable)(nil),             // 36: aapt.pb.Styleable
	(*Array)(nil),                 // 37: aapt.pb.Array
	(*Plural)(nil),                // 38: aapt.pb.Plural
	(*XmlNode)(nil),               // 39: aapt.pb.XmlNode
	(*XmlElement)(nil),            // 40: aapt.pb.XmlElement
	(*XmlNamespace)(nil),          // 41: aapt.pb.XmlNamespace
	(*XmlAttribute)(nil),          // 42: aapt.pb.XmlAttribute
	(*MacroBody)(nil),             // 43: aapt.pb.MacroBody
	(*NamespaceAlias)(nil),        // 44: aapt.pb.NamespaceAlias
	(*StyleString)(nil),           // 45: aapt.pb.StyleString
	(*UntranslatableSection)(nil), // 46: aapt.pb.UntranslatableSection
	(*StyledString_Span)(nil),     // 47: aapt.pb.StyledString.Span
	(*Primitive_NullType)(nil),    // 48: aapt.pb.Primitive.NullType
	(*Primitive_EmptyType)(nil),   // 49: aapt.pb.Primitive.EmptyType
	(*Attribute_Symbol)(nil),      // 50: aapt.pb.Attribute.Symbol
	(*Style_Entry)(nil),           // 51: aapt.pb.Style.Entry
	(*Styleable_Entry)(nil),       // 52: aapt.pb.Styleable.Entry
	(*Array_Element)(nil),         // 53: aapt.pb.Array.Element
	(*Plural_Entry)(nil),          // 54: aapt.pb.Plural.Entry
	(*StyleString_Span)(nil),      // 55: aapt.pb.StyleString.Span
	(*Configuration)(nil),         // 56: aapt.pb.Configuration
}
var file_Resources_proto_depIdxs = []int32{
	7,  // 0: aapt.pb.Source.position:type_name -> aapt.pb.SourcePosition
	6,  // 1: aapt.pb.ResourceTable.source_pool:type_name -> aapt.pb.StringPool
	12, // 2: aapt.pb.ResourceTable.package:type_name -> aapt.pb.Package
	17, // 3: aapt.pb.ResourceTable.overlayable:type_name -> aapt.pb.Overlayable
	9,  // 4: aapt.pb.ResourceTable.tool_fingerprint:type_name -> aapt.pb.ToolFingerprint
	11, // 5: aapt.pb.Package.package_id:type_name -> aapt.pb.PackageId
	14, // 6: aapt.pb.Package.type:type_name -> aapt.pb.Type
	13, // 7: aapt.pb.Type.type_id:type_name -> aapt.pb.TypeId
	21, // 8: aapt.pb.Type.entry:type_name -> aapt.pb.Entry
	0,  // 9: aapt.pb.Visibility.level:type_name -> aapt.pb.Visibility.Level
	8,  // 10: aapt.pb.Visibility.source:type_name -> aapt.pb.Source
	8,  // 11: aapt.pb.AllowNew.source:type_name -> aapt.pb.Source
	8,  // 12: aapt.pb.Overlayable.source:type_name -> aapt.pb.Source
	8,  // 13: aapt.pb.OverlayableItem.source:type_name -> aapt.pb.Source
	1,  // 14: aapt.pb.OverlayableItem.policy:type_name -> aapt.pb.OverlayableItem.Policy
	8,  // 15: aapt.pb.StagedId.source:type_name -> aapt.pb.Source
	20, // 16: aapt.pb.Entry.entry_id:type_name -> aapt.pb.EntryId
	15, // 17: aapt.pb.Entry.visibility:type_name -> aapt.pb.Visibility
	16, // 18: aapt.pb.Entry.allow_new:type_name -> aapt.pb.AllowNew
	18, // 19: aapt.pb.Entry.overlayable_item:type_name -> aapt.pb.OverlayableItem
	22, // 20: aapt.pb.Entry.config_value:type_name -> aapt.pb.ConfigValue
	19, // 21: aapt.pb.Entry.staged_id:type_name -> aapt.pb.StagedId
	56, // 22: aapt.pb.ConfigValue.config:type_name -> aapt.pb.Configuration
	23, // 23: aapt.pb.ConfigValue.value:type_name -> aapt.pb.Value
	8,  // 24: aapt.pb.Value.source:type_name -> aapt.pb.Source
	24, // 25: aapt.pb.Value.item:type_name -> aapt.pb.Item
	25, // 26: aapt.pb.Value.compound_value:type_name -> aapt.pb.CompoundValue
	27, // 27: aapt.pb.Item.ref:type_name -> aapt.pb.Reference
	29, // 28: aapt.pb.Item.str:type_name -> aapt.pb.String
	30, // 29: aapt.pb.Item.raw_str:type_name -> aapt.pb.RawString
	31, // 30: aapt.pb.Item.styled_str:type_name -> aapt.pb.StyledString
	32, // 31: aapt.pb.Item.file:type_name -> aapt.pb.FileReference
	28, // 32: aapt.pb.Item.id:type_name -> aapt.pb.Id
	33, // 33: aapt.pb.Item.prim:type_name -> aapt.pb.Primitive
	34, // 34: aapt.pb.CompoundValue.attr:type_name -> aapt.pb.Attribute
	35, // 35: aapt.pb.CompoundValue.style:type_name -> aapt.pb.Style
	36, // 36: aapt.pb.CompoundValue.styleable:type_name -> aapt.pb.Styleable
	37, // 37: aapt.pb.CompoundValue.array:type_name -> aapt.pb.Array
	38, // 38: aapt.pb.CompoundValue.plural:type_name -> aapt.pb.Plural
	43, // 39: aapt.pb.CompoundValue.macro:type_name -> aapt.pb.MacroBody
	2,  // 40: aapt.pb.Reference.type:type_name -> aapt.pb.Reference.Type
	26, // 41: aapt.pb.Reference.is_dynamic:type_name -> aapt.pb.Boolean
	47, // 42: aapt.pb.StyledString.span:type_name -> aapt.pb.StyledString.Span
	3,  // 43: aapt.pb.FileReference.type:type_name -> aapt.pb.FileReference.Type
	48, // 44: aapt.pb.Primitive.null_value:type_name -> aapt.pb.Primitive.NullType
	49, // 45: aapt.pb.Primitive.empty_value:type_name -> aapt.pb.Primitive.EmptyType
	50, // 46: aapt.pb.Attribute.symbol:type_name -> aapt.pb.Attribute.Symbol
	27, // 47: aapt.pb.Style.parent:type_name -> aapt.pb.Reference
	8,  // 48: aapt.pb.Style.parent_source:type_name -> aapt.pb.Source
	51, // 49: aapt.pb.Style.entry:type_name -> aapt.pb.Style.Entry
	52, // 50: aapt.pb.Styleable.entry:type_name -> aapt.pb.Styleable.Entry
	53, // 51: aapt.pb.Array.element:type_name -> aapt.pb.Array.Element
	54, // 52: aapt.pb.Plural.entry:type_name -> aapt.pb.Plural.Entry
	40, // 53: aapt.pb.XmlNode.element:type_name -> aapt.pb.XmlElement
	7,  // 54: aapt.pb.XmlNode.source:type_name -> aapt.pb.SourcePosition
	41, // 55: aapt.pb.XmlElement.namespace_declaration:type_name -> aapt.pb.XmlNamespace
	42, // 56: aapt.pb.XmlElement.attribute:type_name -> aapt.pb.XmlAttribute
	39, // 57: aapt.pb.XmlElement.child:type_name -> aapt.pb.XmlNode
	7,  // 58: aapt.pb.XmlNamespace.source:type_name -> aapt.pb.SourcePosition
	7,  // 59: aapt.pb.XmlAttribute.source:type_name -> aapt.pb.SourcePosition
	24, // 60: aapt.pb.XmlAttribute.compiled_item:type_name -> aapt.pb.Item
	45, // 61: aapt.pb.MacroBody.style_string:type_name -> aapt.pb.StyleString
	46, // 62: aapt.pb.MacroBody.untranslatable_sections:type_name -> aapt.pb.UntranslatableSection
	44, // 63: aapt.pb.MacroBody.namespace_stack:type_name -> aapt.pb.NamespaceAlias
	7,  // 64: aapt.pb.MacroBody.source:type_name -> aapt.pb.SourcePosition
	55, // 65: aapt.pb.StyleString.spans:type_name -> aapt.pb.StyleString.Span
	8,  // 66: aapt.pb.Attribute.Symbol.source:type_name -> aapt.pb.Source
	27, // 67: aapt.pb.Attribute.Symbol.name:type_name -> aapt.pb.Reference
	8,  // 68: aapt.pb.Style.Entry.source:type_name -> aapt.pb.Source
	27, // 69: aapt.pb.Style.Entry.key:type_name -> aapt.pb.Reference
	24, // 70: aapt.pb.Style.Entry.item:type_name -> aapt.pb.Item
	8,  // 71: aapt.pb.Styleable.Entry.source:type_name -> aapt.pb.Source
	27, // 72: aapt.pb.Styleable.Entry.attr:type_name -> aapt.pb.Reference
	8,  // 73: aapt.pb.Array.Element.source:type_name -> aapt.pb.Source
	24, // 74: aapt.pb.Array.Element.item:type_name -> aapt.pb.Item
	8,  // 75: aapt.pb.Plural.Entry.source:type_name -> aapt.pb.Source
	5,  // 76: aapt.pb.Plural.Entry.arity:type_name -> aapt.pb.Plural.Arity
	24, // 77: aapt.pb.Plural.Entry.item:type_name -> aapt.pb.Item
	78, // [78:78] is the sub-list for method output_type
	78, // [78:78] is the sub-list for method input_type
	78, // [78:78] is the sub-list for extension type_name
	78, // [78:78] is the sub-list for extension extendee
	0,  // [0:78] is the sub-list for field type_name
}

func init() { file_Resources_proto_init() }
func file_Resources_proto_init() {
	if File_Resources_proto != nil {
		return
	}
	file_Configuration_proto_init()
	file_Resources_proto_msgTypes[17].OneofWrappers = []any{
		(*Value_Item)(nil),
		(*Value_CompoundValue)(nil),
	}
	file_Resources_proto_msgTypes[18].OneofWrappers = []any{
		(*Item_Ref)(nil),
		(*Item_Str)(nil),
		(*Item_RawStr)(nil),
		(*Item_StyledStr)(nil),
		(*Item_File)(nil),
		(*Item_Id)(nil),
		(*Item_Prim)(nil),
	}
	file_Resources_proto_msgTypes[19].OneofWrappers = []any{
		(*CompoundValue_Attr)(nil),
		(*CompoundValue_Style)(nil),
		(*CompoundValue_Styleable)(nil),
		(*CompoundValue_Array)(nil),
		(*CompoundValue_Plural)(nil),
		(*CompoundValue_Macro)(nil),
	}
	file_Resources_proto_msgTypes[27].OneofWrappers = []any{
		(*Primitive_NullValue)(nil),
		(*Primitive_EmptyValue)(nil),
		(*Primitive_FloatValue)(nil),
		(*Primitive_DimensionValue)(nil),
		(*Primitive_FractionValue)(nil),
		(*Primitive_IntDecimalValue)(nil),
		(*Primitive_IntHexadecimalValue)(nil),
		(*Primitive_BooleanValue)(nil),
		(*Primitive_ColorArgb8Value)(nil),
		(*Primitive_ColorRgb8Value)(nil),
		(*Primitive_ColorArgb4Value)(nil),
		(*Primitive_ColorRgb4Value)(nil),
		(*Primitive_DimensionValueDeprecated)(nil),
		(*Primitive_FractionValueDeprecated)(nil),
	}
	file_Resources_proto_msgTypes[33].OneofWrappers = []any{
		(*XmlNode_Element)(nil),
		(*XmlNode_Text)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_Resources_proto_rawDesc), len(file_Resources_proto_rawDesc)),
			NumEnums:      6,
			NumMessages:   50,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Resources_proto_goTypes,
		DependencyIndexes: file_Resources_proto_depIdxs,
		EnumInfos:         file_Resources_proto_enumTypes,
		MessageInfos:      file_Resources_proto_msgTypes,
	}.Build()
	File_Resources_proto = out.File
	file_Resources_proto_goTypes = nil
	file_Resources_proto_depIdxs = nil
}
